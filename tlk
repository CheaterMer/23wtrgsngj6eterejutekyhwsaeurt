local DiscordLib = loadstring(game:HttpGet "https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/discord")()

_G.targetr = nil
_G.bruhinthelockon = nil
_G.LockOnhit = false

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local LP = Players.LocalPlayer

local choosing_spawn = CFrame.new(282.811157, 5.99613762, -69.6557007, 0.826119781, -6.12301321e-08, 0.563494503, 6.9332371e-09, 1, 9.84968693e-08, -0.563494503, -7.74633762e-08, 0.826119781)

makefolder("TLK_ASSETS")

local MAX_PART_COUNT = 25

local userOwner = {"Meringue_Cookies","Cheater_Mer","thscjsgh1"}

local vmkey = workspace["Vending Machine"].Keypad.Buttons.Keys
local vmyes = workspace["Vending Machine"].Keypad.Buttons.Enter
local vmcen = workspace["Vending Machine"].Keypad.Buttons.Cancel

local assets = {
    ["ServerIcon"] = {
        ["Name"] = "servericon.png",
        ["path"] = "https://cdn-icons-png.flaticon.com/128/4380/4380385.png"
    },
    ["ClientIcon"] = {
        ["Name"] = "clienticon.png",
        ["path"] = "https://cdn-icons-png.flaticon.com/128/2575/2575690.png"
    }
}

for index, value in pairs(assets) do
    local res = request({
        Method="GET",
        Url=value["path"]
    })
    writefile("TLK_ASSETS/"..value["Name"], res.Body)
    repeat task.wait() until isfile("TLK_ASSETS/"..value["Name"])
end

local Remotes = {}

for idx, val in pairs(game:GetService("ReplicatedStorage"):GetChildren()) do
    if val:IsA("RemoteEvent") then
        Remotes[val.Name] = val
    end
end

local Chat = {}

for idx, val in pairs(game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents:GetChildren()) do
    if val:IsA("RemoteEvent") then
        Chat[val.Name] = val
    end
end

local function CheckRange(part1, part2, stud)
    range = (part1.Position - part2.Position).Magnitude
    if range < stud then
        return true
    end
    return false
end

local function GetPlayer(name)
    for idx, plr in pairs(Players:GetPlayers()) do
        if plr.Name:lower():find(name) or plr.DisplayName:lower():find(name) then
            return plr
        end
    end
    return nil
end

local ToolFinder 

function findtool(toolName)
	if LP.Backpack:FindFirstChild(toolName) then
        ToolFinder = LP.Backpack:FindFirstChild(toolName)
        print("backpack")
		return ToolFinder
	elseif workspace:FindFirstChild(toolName) then
        ToolFinder = workspace:FindFirstChild(toolName)
        print("workspace")
		return ToolFinder
    elseif workspace:FindFirstChild(toolName) == nil then
        for i,v in pairs(Players:GetChildren()) do
            if v.Backpack:FindFirstChild(toolName) then
				print(v.Name,"   " , toolName)
                ToolFinder = v.Backpack:FindFirstChild(toolName)
                return ToolFinder
            end
        end
	end
end

local ToolFinders

function findtools(toolNames)
	if LP.Backpack:FindFirstChild(toolNames) then
        ToolFinders = LP.Backpack:FindFirstChild(toolNames)
        print("backpack")
		return ToolFinders
    elseif LP.Backpack:FindFirstChild(toolNames) == nil then
        for i,v in pairs(Players:GetChildren()) do
            if v.Backpack:FindFirstChild(toolNames) then
				print(v.Name,"   " , toolNames)
                ToolFinders = v.Backpack:FindFirstChild(toolNames)
                return ToolFinders
            end
        end
	end
end

local win = DiscordLib:Window("TLK Panel")

--local server_tab = win:Server("Server", getcustomasset("TLK_ASSETS/"..assets["ServerIcon"]["Name"]))
--local client_tab = win:Server("Client", getcustomasset("TLK_ASSETS/"..assets["ClientIcon"]["Name"]))

local server_tab = win:Server("Server", "http://www.roblox.com/asset/?id=6031075938")
local client_tab = win:Server("Client", "http://www.roblox.com/asset/?id=6031075938")
local Troll_tab = win:Server("White and Black List", "http://www.roblox.com/asset/?id=6031075938")

local block_tools_channel = server_tab:Channel("Tools")
local except_friends = false
local block_tools = false
local infHamburger = false
local BlockTaseritTaser = false
local StarterGui = game: GetService("StarterGui")

_G.forcestop = false
task.spawn(function()
    while task.wait() do
        if _G.forcestop then
            _G.forcestop = nil
            break
        end pcall(function()
        if block_tools then
            for idx, plr in pairs(Players:GetPlayers()) do
                if plr ~= LP 
				and not table.find(userOwner, plr.Name) 
				and plr.Character.IsCuffed.Value == false 
				--and not table.find(whitelistuser, plr.Name)
				then
                    Remotes["UnCuffed"]:FireServer(plr.Character)
                end
            end
        end
    end) 
end
end)

task.spawn(function()
    while task.wait() do
		if backpackistrue then
        pcall(function()
		game.StarterGui: SetCoreGuiEnabled (Enum.CoreGuiType.Backpack, true)
		end)
	end
end
end)

task.spawn(function()
    while task.wait() do
		if infHamburger then
			spawn(function()
			fireclickdetector(workspace.Hamburger.ClickDetector)
			for i,v in pairs(LP.Backpack:GetChildren()) do
				if v.Name == "Hamburger" then
					task.wait(0.01)
				v.Parent = LP.Character
				end
			end
		end)
		end
	end
end)

task.spawn(function()
    while task.wait() do
		if infHamburgers then
			spawn(function()
			for i,v in pairs(LP.Character:GetChildren()) do
				if v.Name == "Hamburger" then
					task.wait(0.01)
				v.Parent = game.Workspace
				end
			end
		end)
		end
	end
end)

task.spawn(function()
    while task.wait() do
		if infFood then
spawn(function()
			fireclickdetector(workspace.Food.Main.ClickDetector)
			for i,v in pairs(LP.Backpack:GetChildren()) do
				if v.Name == "Food" then
					task.wait(0.01)
				v.Parent = LP.Character
				end
			end
		end)
		end
	end
end)

task.spawn(function()
    while task.wait() do
		if infFoods then
spawn(function()
			for i,v in pairs(LP.Character:GetChildren()) do
				if v.Name == "Food" then
					task.wait(0.01)
				v.Parent = game.Workspace
				end
			end
		end)
		end
	end
end)

block_tools_channel:Toggle("My Tool is", false, function(bool)
    backpackistrue = bool
end)

block_tools_channel:Button("Get Tools", function()

	--[[
		if LP.Team.Name == "Guard" then
			LP.Backpack:FindFirstChild("KeyCard"):Destroy()
			task.wait(0.2)
			LP.Backpack:FindFirstChild("Handcuffs").Parent = LP
			task.wait(0.2)
			LP.Backpack:FindFirstChild("PoliceBaton"):Destroy()
			task.wait(0.2)
			LP.Backpack:FindFirstChild("Grab").Parent = LP
			task.wait(0.2)
			LP.Backpack:FindFirstChild("Flashlight"):Destroy()
			task.wait(0.2)
			fireclickdetector(workspace.Axe.ClickDetector)
			task.wait(0.2)
			fireclickdetector(workspace.Pickaxe.ClickDetector)
			task.wait(0.2)
			fireclickdetector(workspace.Taser.ClickDetector)
			task.wait(0.4)
			LP:FindFirstChild("Handcuffs").Parent = LP.Backpack
			task.wait(0.2)
			fireclickdetector(workspace.Rope.ClickDetector)
		elseif LP.Team.Name == "Prisoner" then
			fireclickdetector(workspace.Axe.ClickDetector)
			fireclickdetector(workspace.Pickaxe.ClickDetector)
			fireclickdetector(workspace:FindFirstChild("Handcuffs (fugitive)").ClickDetector)
			fireclickdetector(workspace.Rope.ClickDetector)
			fireclickdetector(workspace.KeyCard.ClickDetector)
		elseif LP.Team.Name == "Choosing" then
			fireclickdetector(workspace.Axe.ClickDetector)
			fireclickdetector(workspace.Pickaxe.ClickDetector)
			fireclickdetector(workspace.Taser.ClickDetector)
			fireclickdetector(workspace:FindFirstChild("Handcuffs (fugitive)").ClickDetector)
			fireclickdetector(workspace.Rope.ClickDetector)
			fireclickdetector(workspace.KeyCard.ClickDetector)
		elseif LP.Team.Name == "Fugitives" then
			LP.Backpack:FindFirstChild("Fist"):Destroy()
			task.wait(0.2)
			LP.Backpack:FindFirstChild("Grab"):Destroy()
			task.wait(0.2)
			fireclickdetector(workspace.Axe.ClickDetector)
			fireclickdetector(workspace.Pickaxe.ClickDetector)
			fireclickdetector(workspace.Taser.ClickDetector)
			fireclickdetector(workspace:FindFirstChild("Handcuffs (fugitive)").ClickDetector)
			fireclickdetector(workspace.Rope.ClickDetector)
			fireclickdetector(workspace.KeyCard.ClickDetector)
		elseif LP.Team.Name == "Civilian" then
			--LP.Backpack:FindFirstChild("Fist"):Destroy()
			--task.wait(0.2)
			LP.Backpack:FindFirstChild("Grab"):Destroy()
			task.wait(0.2)
			fireclickdetector(workspace.Axe.ClickDetector)
			fireclickdetector(workspace.Pickaxe.ClickDetector)
			fireclickdetector(workspace.Taser.ClickDetector)
			fireclickdetector(workspace:FindFirstChild("Handcuffs (fugitive)").ClickDetector)
			fireclickdetector(workspace.Rope.ClickDetector)
			fireclickdetector(workspace.KeyCard.ClickDetector)
		end
	]]
		for i,v in pairs(workspace:GetDescendants()) do
		if v:IsA("Tool") then
				pcall(function ()
					fireclickdetector(v.ClickDetector)
				end)
			end
		end

end)





block_tools_channel:Label("  ")

block_tools_channel:Label("Food Item")

block_tools_channel:Toggle("Hamburger!!!!", false, function(bool)
    infHamburger = bool
end)

block_tools_channel:Toggle("Drop Hamburger!!!!", false, function(bool)
    infHamburgers = bool
end)

block_tools_channel:Button("Drop Burger", function()

	for i,v in pairs(LP.Character:GetChildren()) do
		if v.Name == "Hamburger" then
			task.wait(0.01)
		v.Parent = game.Workspace
		end
	end

end)


block_tools_channel:Toggle("Food!!!!", false, function(bool)
    infFood = bool
end)

block_tools_channel:Toggle("Drop Food!!!!", false, function(bool)
    infFoods = bool
end)

block_tools_channel:Button("Drop Food", function()

	for i,v in pairs(LP.Character:GetChildren()) do
		if v.Name == "Food" then
			task.wait(0.01)
		v.Parent = game.Workspace
		end
	end

end)

block_tools_channel:Label("  ")

block_tools_channel:Label("Vending Machine")

local cooldowns = 0.2

task.spawn(function()
    while task.wait() do
    pcall(function()
        i = math.random(1,9)
        if VMR then
            task.wait(cooldowns)
            if i == 1 then
                fireclickdetector(vmkey["1"].ClickDetector)
                fireclickdetector(vmkey.A.ClickDetector)
                fireclickdetector(vmyes.ClickDetector)
            elseif i == 2 then
                fireclickdetector(vmkey["1"].ClickDetector)
                fireclickdetector(vmkey.B.ClickDetector)
                fireclickdetector(vmyes.ClickDetector)
            elseif i == 3 then
                fireclickdetector(vmkey["1"].ClickDetector)
                fireclickdetector(vmkey.C.ClickDetector)
                fireclickdetector(vmyes.ClickDetector)
            elseif i == 4 then 
                fireclickdetector(vmkey["2"].ClickDetector)
                fireclickdetector(vmkey.A.ClickDetector)
                fireclickdetector(vmyes.ClickDetector)
            elseif i == 5 then
                fireclickdetector(vmkey["2"].ClickDetector)
                fireclickdetector(vmkey.B.ClickDetector)
                fireclickdetector(vmyes.ClickDetector)
            elseif i == 6 then
                fireclickdetector(vmkey["2"].ClickDetector)
                fireclickdetector(vmkey.C.ClickDetector)
                fireclickdetector(vmyes.ClickDetector)
            elseif i == 7 then
                fireclickdetector(vmkey["3"].ClickDetector)
                fireclickdetector(vmkey.A.ClickDetector)
                fireclickdetector(vmyes.ClickDetector)
            elseif i == 8 then
                fireclickdetector(vmkey["3"].ClickDetector)
                fireclickdetector(vmkey.B.ClickDetector)
                fireclickdetector(vmyes.ClickDetector)
            elseif i == 9 then
                fireclickdetector(vmkey["3"].ClickDetector)
                fireclickdetector(vmkey.C.ClickDetector)
                fireclickdetector(vmyes.ClickDetector)
            end
        end
        task.wait(cooldowns)
        end) 
    end
end)

task.spawn(function()
    while task.wait() do
    pcall(function()
        task.wait(cooldowns)
        if VMB then
            fireclickdetector(vmcen.ClickDetector)
        end
        task.wait(cooldowns)
    end)
end
end)

block_tools_channel:Toggle("Random Food", false, function(bool)
    VMR = bool
end)

block_tools_channel:Toggle("Block", false, function(bool)
    VMB = bool
end)

--[[
local itemlist = {
    "Axe",
    "PickAxe",
    "Taser",
    "Collar",
    "Handcuffs",
    "Handcuffs (fugitive)",
    "Rope",
    "Hamburger",
    "Food",
    "Bag"
}
]]
local itemlist = {}

for i,v in pairs(workspace:GetDescendants()) do
    if v:IsA("Tool") then
        --pcall(function ()
        if not table.find(itemlist, v.Name) then
        table.insert(itemlist, v.Name)
        end
        --end)
    end
end


block_tools_channel:Label("  ")

block_tools_channel:Label("ALL Block Item")

block_tools_channel:Toggle("Block Tools", false, function(bool)
    block_tools = bool
end)

block_tools_channel:Toggle("Except Friends", false, function(bool)
    except_friends = bool
end)

block_tools_channel:Label("One Block Item")

block_tools_channel:Dropdown(
    "Pick Item",
		itemlist,
    function(bool)
		print(bool)
        blockitempick = bool
    end
)

block_tools_channel:Button("Get Tool", function()
   
    for i,v in pairs(workspace:GetDescendants()) do
       if v:IsA("Tool") and v.Name == blockitempick then
           pcall(function()
            for a,f in pairs(v:GetChildren()) do
                if f:FindFirstChild("ClickDetector") then
                    fireclickdetector(f:FindFirstChild("ClickDetector"))
                end
            end
          end)
       end
    end

end)

block_tools_channel:Toggle("Block Item", false, function(bool)
    BIT = bool
end)

task.spawn(function()
    while task.wait(0.1) do
		pcall(function()
			if BIT then
				for idx, plr in pairs(Players:GetPlayers()) do
					if plr.Character.Humanoid.Health == 0 then
						return
					end
					if plr ~= LP and plr.Team ~= LP.Team and plr.Character.Hostile.Value == true and plr.Character:FindFirstChild(blockitempick) then
						local args = {
							[1] = "Hit",
							[2] = game:GetService("Players").LocalPlayer.Backpack.Taser,
							[3] = game:GetService("Players"):WaitForChild(plr.Name).Character.Head
						}
						
						game:GetService("ReplicatedStorage"):WaitForChild("Tase"):FireServer(unpack(args))
						wait()
						local args = {
							[1] = "Recharge",
							[2] = game:GetService("Players").LocalPlayer.Backpack.Taser
						}
						
						game:GetService("ReplicatedStorage"):WaitForChild("Tase"):FireServer(unpack(args))
					elseif plr ~= LP and plr.Team ~= LP.Team and plr.Character.Hostile.Value == false and plr.Character:FindFirstChild(blockitempick) then
						Remotes["UnCuffed"]:FireServer(plr.Character)
					end
				end
			end
		end) 
end
end)

block_tools_channel:Label("  ")

block_tools_channel:Label("Team Block Item")

block_tools_channel:Dropdown(
    "Pick Team",
		{"Guard","Prisoner","Fugitives","Choosing","Hostage","Civilian"},
    function(bool)
		print(bool)
        BITL = bool
    end
)

block_tools_channel:Toggle("Team Block Item", false, function(bool)
    TBI = bool
end)

task.spawn(function()
    while task.wait() do
    pcall(function()
        if TBI then
            for idx, plr in pairs(Players:GetPlayers()) do
                if plr ~= LP and plr.Name ~= userOwner and plr.Character.IsCuffed.Value == false and plr.Team.Name == BITL then
                    if except_friends and not plr:IsFriendsWith(LP.UserId) then
                        Remotes["UnCuffed"]:FireServer(plr.Character)
                    else
                        Remotes["UnCuffed"]:FireServer(plr.Character)
                    end
                end
            end
        end
    end) 
end
end)

task.spawn(function()
    while task.wait() do
		if infFlashlight then
			spawn(function()
			fireclickdetector(workspace.Flashlight.ClickDetector)
			for i,v in pairs(LP.Backpack:GetChildren()) do
				if v.Name == "Flashlight" then
					task.wait(0.01)
					v.Parent = LP.Character
				end
			end
		end)
		end
	end
end)

task.spawn(function()
    while task.wait() do
		if infFlashlights then
			spawn(function()
			for i,v in pairs(LP.Character:GetChildren()) do
				if v.Name == "Flashlight" then
					task.wait(0.01)
					v.Parent = game.Workspace
				end
			end
		end)
		end
	end
end)

block_tools_channel:Toggle("Flashlight", false, function(bool)
    infFlashlight = bool
end)

block_tools_channel:Toggle("Drop Flashlight", false, function(bool)
    infFlashlights = bool
end)

block_tools_channel:Button("eat all Flashlight", function()

	for i,v in pairs(workspace:GetChildren()) do
		if v.Name == "Flashlight" then
			task.wait(0.1)
			pcall(function()
				LP.Character:WaitForChild("HumanoidRootPart").CFrame = v.Handle.CFrame
		end)
		end
	end

end)

local player_channel = server_tab:Channel("Character")
local AUF
local AUH
local AUC

task.spawn(function()
	while task.wait() do
		if AUC then pcall(function()
			for idx, plr in pairs(Players:GetPlayers()) do
                if plr ~= LP and plr.Character.IsLocked.Value == true then
					Remotes["CollarRemove"]:FireServer(plr.Character,"Collar")
				end
				end
		end) end
	end
end)

task.spawn(function()
	while task.wait() do
		if AUF then pcall(function()
			for idx, plr in pairs(Players:GetPlayers()) do
                if plr ~= LP and plr.Character.IsCuffed.Value == true then
					Remotes["UnCuffed"]:FireServer(plr.Character)
				end
				end
		end) end
	end
end)

task.spawn(function()
	while task.wait() do
		if AUH then pcall(function()
			for idx, plr in pairs(Players:GetPlayers()) do
                if plr ~= LP and plr.Character.IsHogged.Value == true then
				Remotes["IsHog"]:FireServer(plr.Character,"UnHog")
		end end
		end) end
	end
end)

task.spawn(function()
	while task.wait() do
		if ATS then pcall(function()
		for idx, plr in pairs(Players:GetPlayers()) do
			if plr ~= LP 
			and not table.find(userOwner, plr.Name) 
			and plr.Character.Hostile.Value == true 
			and plr.Team ~= LP.Team 
			--and not table.find(whitelistuser, plr.Name)
			then
					pos = game:GetService("Players").LocalPlayer.Character.Torso.CFrame.Position
					tpos = plr.Character.Torso.CFrame.Position
					--print(name)
					--print(tpos)
						--[[
						spawn(function()
							local args = {
									[1] = "Generate",
									[2] = game:GetService("Players").LocalPlayer.Character.Taser,
									[3] = Vector3.new(pos.X,pos.Y,pos.Z),
									[4] = Vector3.new(tpos.X,tpos.Y,tpos.Z)
								}
								
								game:GetService("ReplicatedStorage"):WaitForChild("Tase"):FireServer(unpack(args))
						end)
							]]
						--TaserRemote:FireServer("Hit",game:GetService("Players").LocalPlayer.Backpack.Taser,plr.Character.Head)
						
						local args = {
							[1] = "Hit",
							[2] = findtools("Taser"),
							[3] = plr.Character.Head
						}
						
						game:GetService("ReplicatedStorage"):WaitForChild("Tase"):FireServer(unpack(args))
						
						wait(0.1)
						--TaserRemote:FireServer(	"Recharge", game:GetService("Players").LocalPlayer.Backpack.Taser)
						
						local args = {
							[1] = "Recharge",
							[2] = findtools("Taser")
						}
						
						game:GetService("ReplicatedStorage"):WaitForChild("Tase"):FireServer(unpack(args))
						
					end
				end
		end) end
	end
end)


player_channel:Toggle("All Un Cuff", false, function(bool)
	AUF = bool
end)

player_channel:Toggle("All Un Hog", false, function(bool)
	AUH = bool
end)

player_channel:Toggle("All Un Collar Aura", false, function(bool)
	AUC = bool
end)

player_channel:Toggle("All User Taser", false, function(bool)
	ATS = bool
end)

player_channel:Label("Just One Click")

player_channel:Button("OAUC", function()
	for idx, plr in pairs(Players:GetPlayers()) do
		if plr ~= LP and plr.Character.IsCuffed.Value == true then
			Remotes["UnCuffed"]:FireServer(plr.Character)
		end
	end
end)

player_channel:Button("OAUH", function()
	for idx, plr in pairs(Players:GetPlayers()) do
		if plr ~= LP and plr.Character.IsHogged.Value == true then
			Remotes["IsHog"]:FireServer(plr.Character,"UnHog")
		end 
	end
end)

player_channel:Button("OAUC", function()
	for idx, plr in pairs(Players:GetPlayers()) do
		if plr ~= LP and plr.Character.IsLocked.Value == true then
			Remotes["CollarRemove"]:FireServer(plr.Character,"Collar")
		end
	end
end)

function cuffs()
	pcall(function()
		for idx, plr in pairs(Players:GetPlayers()) do
			if
				plr ~= LP and CheckRange(LP.Character.HumanoidRootPart, plr.Character.HumanoidRootPart, 10)
				and plr.Character.Hostile.Value and LP.Team ~= plr.Team and plr.Character.Humanoid.Health ~= 0 
			then
				if plr.Team ~= LP.Team and _G.LockOnhit == false and plr.Character.IsCuffed.Value == false then
					Remotes["IsCuffed"]:FireServer(findtool("Handcuffs"), plr.Character)
						task.wait()
				elseif plr.Team ~= LP.Team and _G.LockOnhit == true and plr.Character.IsCuffed.Value == false then
					if plr.Name == _G.targetr then
						Remotes["IsCuffed"]:FireServer(findtool("Handcuffs"), plr.Character)
						task.wait()
					end
				elseif plr.Team ~= LP.Team and _G.LockOnhit == false and plr.Character.IsCuffed.Value == true then
						Remotes["UnCuffed"]:FireServer(plr.Character)
						task.wait()
				elseif plr.Team ~= LP.Team and _G.LockOnhit == true and plr.Character.IsCuffed.Value == true then
					if plr.Name == _G.targetr then
						Remotes["UnCuffed"]:FireServer(plr.Character)
						task.wait()
					end
				end
			end
		end
	end) 
end

function hoglast()
	pcall(function()
		for idx, plr in pairs(Players:GetPlayers()) do
			if
				plr ~= LP and CheckRange(LP.Character.HumanoidRootPart, plr.Character.HumanoidRootPart, 10)
				and plr.Character.Hostile.Value and LP.Team ~= plr.Team and plr.Character.Humanoid.Health ~= 0 
			then
				if plr.Team ~= LP.Team and _G.LockOnhit == false and plr.Character.IsHogged.Value == false then
					Remotes["IsHog"]:FireServer(plr.Character,"Hog")
					task.wait()
				elseif plr.Team ~= LP.Team and _G.LockOnhit == true and plr.Character.IsHogged.Value == false then
					if plr.Name == _G.targetr then
						Remotes["IsHog"]:FireServer(plr.Character,"Hog")
						task.wait()
					end
				elseif plr.Team ~= LP.Team and _G.LockOnhit == false and plr.Character.IsHogged.Value == true then
					Remotes["IsHog"]:FireServer(plr.Character,"UnHog")
					task.wait()
				elseif plr.Team ~= LP.Team and _G.LockOnhit == true and plr.Character.IsHogged.Value == true then
					if plr.Name == _G.targetr then
						Remotes["IsHog"]:FireServer(plr.Character,"UnHog")
						task.wait()
					end
				end
			end
		end
	end) 
end

player_channel:Label("  ")

player_channel:Button("OAC", function()
	cuffs()
end)

player_channel:Button("OAH", function()
	hoglast()
end)


local GetDownitem = false
local targetr = nil
local taser = false
local tuf = false
local tuc = false
local plrs = game:GetService("Players")
local plr = plrs.LocalPlayer

local names = {}
for idx, plr in pairs(game.Players:GetPlayers()) do
	if not table.find(userOwner, plr.Name) then
    table.insert(names, plr.Name)
	end
end

function item()
	if plr.Character:FindFirstChild("Taser") then
	else 
	plr.Backpack.Taser.Parent = plr.Character
	end
end

task.spawn(function()
	while task.wait() do
		if taser then pcall(function()
			if LP.Character:FindFirstChild("Taser") then
				spawn(function()	
				local args = {
						[1] = "Generate",
						[2] = game:GetService("Players").LocalPlayer.Character.Taser,
						[3] = Vector3.new(pos.X,pos.Y,pos.Z),
						[4] = Vector3.new(tpos.X,tpos.Y,tpos.Z)
					}
					
					game:GetService("ReplicatedStorage"):WaitForChild("Tase"):FireServer(unpack(args))
				end)
	
				local args = {
					[1] = "Hit",
					[2] = game:GetService("Players").LocalPlayer.Character.Taser,
					[3] = game:GetService("Players"):WaitForChild(_G.targetr).Character.Head
				}
				
				game:GetService("ReplicatedStorage"):WaitForChild("Tase"):FireServer(unpack(args))
				wait()
				local args = {
					[1] = "Recharge",
					[2] = game:GetService("Players").LocalPlayer.Character.Taser
				}
				
				game:GetService("ReplicatedStorage"):WaitForChild("Tase"):FireServer(unpack(args))
			
			elseif LP.Backpack:FindFirstChild("Taser") then
	
				local args = {
					[1] = "Hit",
					[2] = game:GetService("Players").LocalPlayer.Backpack.Taser,
					[3] = game:GetService("Players"):WaitForChild(_G.targetr).Character.Head
				}
				
				game:GetService("ReplicatedStorage"):WaitForChild("Tase"):FireServer(unpack(args))
				wait()
				local args = {
					[1] = "Recharge",
					[2] = game:GetService("Players").LocalPlayer.Backpack.Taser
				}
				
				game:GetService("ReplicatedStorage"):WaitForChild("Tase"):FireServer(unpack(args))

			elseif not LP.Backpack:FindFirstChild("Taesr") and not LP.Character:FindFirstChild("Taser") then

				local args = {
					[1] = "Hit",
					[2] = findtools("Taser"),
					[3] = game:GetService("Players"):WaitForChild(_G.targetr).Character.Head
				}
				
				game:GetService("ReplicatedStorage"):WaitForChild("Tase"):FireServer(unpack(args))
				wait()
				local args = {
					[1] = "Recharge",
					[2] = findtools("Taser")
				}
				
				game:GetService("ReplicatedStorage"):WaitForChild("Tase"):FireServer(unpack(args))

			end
	
		end) end
	end
end)

task.spawn(function()
	while task.wait() do
		if GetDownitem then pcall(function()
			if game:GetService("Players"):FindFirstChild(_G.targetr).Character.IsCuffed.Value == false then
				Remotes["UnCuffed"]:FireServer(game:GetService("Players"):FindFirstChild(_G.targetr).Character)
			end
		end) end
	end
end)

task.spawn(function()
	while task.wait() do
		if tuc then pcall(function()
			if game:GetService("Players"):FindFirstChild(_G.targetr).Character.IsCuffed.Value == true then
				Remotes["UnCuffed"]:FireServer(game:GetService("Players"):FindFirstChild(_G.targetr).Character)
			end
		end) end
	end
end)

task.spawn(function()
	while task.wait() do
		if tuf then pcall(function()
			if game:GetService("Players"):FindFirstChild(_G.targetr).Character.IsHogged.Value == true then
				Remotes["IsHog"]:FireServer(game:GetService("Players"):FindFirstChild(_G.targetr).Character,"UnHog")
			end
		end) end
	end
end)

task.spawn(function()
	while task.wait() do
		if Bruhwhatareyoudoing then pcall(function()
			for _,fa in pairs(game:GetService("Players"):FindFirstChild(_G.targetr).Character:GetDescendants()) do
				task.wait(0.1)
				pcall(function()
				Remotes["Trail"]:FireServer(fa,true)
				end)
			end
		end) end
	end
end)

player_channel:Label("  ")

player_channel:Label("Targeting Only One Player")

local TargetLockon = player_channel:Label("LockOn: "..tostring("use Lock"))

local playerlista = player_channel:Dropdown(
    "Target",
		names,
    function(bool)
		--print(bool)
        _G.targetr = bool
		TargetLockon:ChangeText("LockOn: "..tostring(bool))
		--print(_G.targetr , userOwner)
    end
)

player_channel:Button("One", function()
	pos = game:GetService("Players").LocalPlayer.Character.Torso.CFrame.Position
	tpos = game:GetService("Players"):WaitForChild(_G.targetr).Character.Torso.CFrame.Position
	if LP.Character:FindFirstChild("Taser") then
			spawn(function()	
			local args = {
					[1] = "Generate",
					[2] = game:GetService("Players").LocalPlayer.Character.Taser,
					[3] = Vector3.new(pos.X,pos.Y,pos.Z),
					[4] = Vector3.new(tpos.X,tpos.Y,tpos.Z)
				}
				
				game:GetService("ReplicatedStorage"):WaitForChild("Tase"):FireServer(unpack(args))
			end)

			local args = {
				[1] = "Hit",
				[2] = game:GetService("Players").LocalPlayer.Character.Taser,
				[3] = game:GetService("Players"):WaitForChild(_G.targetr).Character.Head
			}
			
			game:GetService("ReplicatedStorage"):WaitForChild("Tase"):FireServer(unpack(args))
			wait()
			local args = {
				[1] = "Recharge",
				[2] = game:GetService("Players").LocalPlayer.Character.Taser
			}
			
			game:GetService("ReplicatedStorage"):WaitForChild("Tase"):FireServer(unpack(args))
		
		elseif LP.Backpack:FindFirstChild("Taser") then

			local args = {
				[1] = "Hit",
				[2] = game:GetService("Players").LocalPlayer.Backpack.Taser,
				[3] = game:GetService("Players"):WaitForChild(_G.targetr).Character.Head
			}
			
			game:GetService("ReplicatedStorage"):WaitForChild("Tase"):FireServer(unpack(args))
			wait()
			local args = {
				[1] = "Recharge",
				[2] = game:GetService("Players").LocalPlayer.Backpack.Taser
			}
			
			game:GetService("ReplicatedStorage"):WaitForChild("Tase"):FireServer(unpack(args))
		
			elseif not LP.Backpack:FindFirstChild("Taesr") and not LP.Character:FindFirstChild("Taser") then

				local args = {
					[1] = "Hit",
					[2] = findtools("Taser"),
					[3] = game:GetService("Players"):WaitForChild(_G.targetr).Character.Head
				}
				
				game:GetService("ReplicatedStorage"):WaitForChild("Tase"):FireServer(unpack(args))
				wait()
				local args = {
					[1] = "Recharge",
					[2] = findtools("Taser")
				}
				
				game:GetService("ReplicatedStorage"):WaitForChild("Tase"):FireServer(unpack(args))


	end
end)

player_channel:Toggle("taser", false, function(bool)
    taser = bool
end)

player_channel:Toggle("un cuff", false, function(bool)
    tuf = bool
end)

player_channel:Toggle("un hog", false, function(bool)
    tuc = bool
end)

player_channel:Toggle("Get Down Your item Brb", false, function(bool)
    GetDownitem = bool
end)

player_channel:Button("Bruh what are you doing??!?", function()

	for _,fa in pairs(game:GetService("Players"):FindFirstChild(_G.targetr).Character:GetDescendants()) do
		--task.wait(0.1)
		pcall(function()
		Remotes["Trail"]:FireServer(fa,true)
		end)
	end

end)

--player_channel:Toggle("Bruh what are you doing??!?", false, function(bool)
--    Bruhwhatareyoudoing = bool
--end)

local combat_channel = server_tab:Channel("Combat")
local killaura = false
local LOCKON = false
local Ragdollanti = false
local LOCKED 
local attack_tools = {
    "Axe",
    "Pickaxe",
    "Crowbar",
    "Hammer",
    "Knife",
    "Fist"
}

task.spawn(function()
    while task.wait() do
        if _G.forcestop then
            _G.forcestop = nil
            break
        end
        if killaura then pcall(function()
            local tool
            for i,v in pairs(attack_tools) do
                local t = LP.Character:FindFirstChild(v) or LP.Backpack:FindFirstChild(v) or workspace:FindFirstChild(v)
                if t then
                    --t.Parent = LP.Character
                    tool = t
                    break
                end
            end
            for idx, plr in pairs(Players:GetPlayers()) do
                	if plr ~= LP 
					and CheckRange(LP.Character.HumanoidRootPart, plr.Character.HumanoidRootPart, 25) 
					and plr.Character.Hostile.Value 
					and not table.find(userOwner, plr.Name) 
					--and not table.find(whitelistuser, plr.Name)
					and plr.Character.Humanoid.Health ~= 0 
					then
						if LP.Team.Name == "Civilian" 
						and plr.Team.Name ~= "Guard" 
						then
							Remotes["Combat"]:FireServer(LP.Character, plr.Character.Head, tool)
							task.wait(0.1)
						elseif LP.Team.Name ~= "Civilian" then
							Remotes["Combat"]:FireServer(LP.Character, plr.Character.Head, tool)
							task.wait(0.1)
						end
                	end
            	end
        end)end
    end
end)

function DontTrykillmeBruh()
	pcall(function()
		local tool
		for i,v in pairs(attack_tools) do
			local t = LP.Character:FindFirstChild(v)
			if t then
				tool = t
				break
			end
		end
		for idx, plr in pairs(Players:GetPlayers()) do
			if
				plr ~= LP 
                and CheckRange(LP.Character.HumanoidRootPart, plr.Character.HumanoidRootPart, 20)
				and plr.Character.Hostile.Value 
                and LP.Team ~= plr.Team 
                --and plr.Name == LOCKED.Name
                and plr.Character.Humanoid.Health ~= 0 
			then
				if LP.Team.Name == "Civilian" and plr.Team.Name ~= "Guard" then
				Remotes["Combat"]:FireServer(LP.Character, plr.Character.Head, tool)
				task.wait(0.1)
				elseif LP.Team.Name ~= "Civilian" then
					Remotes["Combat"]:FireServer(LP.Character, plr.Character.Head, tool)
					task.wait(0.1)
				end
			end
		end
	end) 
end

function Getattacker()
    pcall(function()
	for idx, plr in pairs(Players:GetPlayers()) do
		if
        plr ~= LP 
        and CheckRange(
        LP.Character.HumanoidRootPart, 
        plr.Character.HumanoidRootPart, 
        15
        )
        and plr.Character.Hostile.Value 
        and LP.Team ~= plr.Team
        and plr.Character.Humanoid.Health ~= 0 
    then
        if LP.Team.Name == "Guard" and plr.Team.Name ~= "Civilian" then
            if LOCKON == true then
                LOCKED = plr
            end
        elseif LP.Team.Name == "Civilian" and plr.Team.Name ~= "Guard" then
            if LOCKON == true then
                LOCKED = plr
            end
		elseif LP.Team.Name == "Prisoner" then
            if LOCKON == true then
                LOCKED = plr
            end
		elseif LP.Team.Name == "Choosing" then
			if LOCKON == true then
				LOCKED = plr
			end
		elseif LP.Team.Name == "Hostage" then
			if LOCKON == true then
				LOCKED = plr
			end
		elseif LP.Team.Name == "Fugitives" then
			if LOCKON == true then
				LOCKED = plr
			end
        end
    end
	end
	end)
end

task.spawn(function()
    while task.wait() do
        pcall(function()
        if donttry == true and LOCKON == true and LOCKED ~= nil then
        LP.Character.HumanoidRootPart.CFrame = LOCKED.Character.HumanoidRootPart.CFrame + Vector3.new(0 , 5 , 0)
        end
    end)
    end
end)

task.spawn(function()
	game.Players.LocalPlayer.Character.Humanoid:GetPropertyChangedSignal("Health"):Connect(function()
		if game.Players.LocalPlayer.Character.Humanoid.Health < 100 and LOCKON == false and donttry == true then
			LOCKON = true
			task.wait(0.1)
			Getattacker()
			local oldPos = LP.Character.HumanoidRootPart.CFrame
			--local loop_move = RunService.Stepped:Connect(function()
	
			print(LOCKED)
	
				repeat
				DontTrykillmeBruh()
				print(LOCKED.Character.Humanoid.Health)
				task.wait(0.1)
				until LOCKED.Character.Humanoid.Health == 0
	
				task.wait(0.5)
	
			--loop_move:Disconnect()
			LP.Character.HumanoidRootPart.CFrame = oldPos
			LOCKON = false
			LOCKED = nil
		end
	end)
end)

task.spawn(function()
	while task.wait() do
		if UF then pcall(function()
		if LP.Character.IsCuffed.Value then
			Remotes["UnCuffed"]:FireServer(LP.Character)
		end
		end) end
	end
end)

task.spawn(function()
	while task.wait() do
		if UH then pcall(function()
		if LP.Character.IsHogged.Value then
			Remotes["IsHog"]:FireServer(LP.Character,"UnHog")
		end
		end) end
	end
end)

task.spawn(function()
	while task.wait() do
		if Ragdollanti then pcall(function()
		if LP.Character.RagDoll.Value == true then
			LP.Character.RagDoll.Value = false
		end
		end) end
	end
end)

function eat()
    spawn(function()
        if LP.Character.Humanoid.Health < 100 then
        if not LP.Backpack:FindFirstChild("Hamburger") then
            task.wait()
           fireclickdetector(workspace:WaitForChild("Hamburger").ClickDetector)
        elseif LP.Backpack:FindFirstChild("Hamburger") then
			task.wait()
            LP.Backpack.Hamburger.Parent = LP.Character
        end
		
		local args = {
			[1] = LP.Character,
			[2] = game:GetService("Players").LocalPlayer.Character.Hamburger,
			[3] = "Heal"
		}
		
		game:GetService("ReplicatedStorage"):WaitForChild("EatingEvent"):FireServer(unpack(args))
		
		
		--Remotes["EatingEvent"]:FireServer(LP.Character, LP.Character.Hamburger, "Hamburger")
		end
	end)
end

task.spawn(function()
	while task.wait() do
		if INFgarb == true then 
			pcall(function()
				LP.Character.StaminaSprintClient.Enabled = false
			end) 
		else if INFgarb == false then
			pcall(function()
				LP.Character.StaminaSprintClient.Enabled = true
			end) 
		end
		end
	end
end)

task.spawn(function()
	while task.wait() do
		if heal then pcall(function()
			wait(0.1)
			spawn(function()
				eat()
			end)
 		end) end	
	end
end)
	
combat_channel:Toggle("Anti Ragdoll", false, function(bool)
	Ragdollanti = bool
end)

combat_channel:Toggle("Uncuff", false, function(bool)
	UF = bool
end)

combat_channel:Toggle("Unhog", false, function(bool)
	UH = bool
end)

combat_channel:Toggle("Heal", false, function(bool)
    heal = bool
end)

combat_channel:Toggle("KillAura", false, function(bool)
    killaura = bool
end)

combat_channel:Toggle("Don't try kill me", false, function(bool)
    donttry = bool
end)

combat_channel:Toggle("Inf Garb", false, function(bool)
    INFgarb = bool
end)

task.spawn(function()
	while task.wait() do 
		if LOOPTP == true then
			pcall(function()
		--local targasdsdaset = GetPlayer(TGBP)
		local asdfgw = Players:FindFirstChild(TGBP)
		if not asdfgw then return end
		print(asdfgw)
		if asdfgw.Character.Hostile.Value == false 
		or asdfgw.Character.Humanoid.Health == 0 then 
			return print("nil")
		end
		LP.Character.HumanoidRootPart.CFrame = asdfgw.Character.HumanoidRootPart.CFrame + Vector3.new(0 , 5 , 0)
	end)	
	end
	end
end)

local TargetLockons = combat_channel:Label("LockOn: "..tostring("use Lock"))

local GarbPlayerList = combat_channel:Dropdown(
    "Target",
	names,
    function(bool)
		print(bool)
        TGBP = bool
		TargetLockons:ChangeText("LockOn: "..tostring(bool))
    end
)

combat_channel:Toggle("Loop Tp", false, function(bool)
    LOOPTP = bool
end)

combat_channel:Button("Grab Player", function()

	--local targasdsdaset = GetPlayer(TGBP)
	local targasdsdaset = Players:FindFirstChild(_G.targetr)
    if not targasdsdaset then return end
	print(targasdsdaset)
    if targasdsdaset.Character.Hostile.Value == false 
	or targasdsdaset.Character.Humanoid.Health == 0 then 
		return print("nil")
	end

    local cuff = LP.Backpack:FindFirstChild("Handcuffs") or LP.Backpack:FindFirstChild("Handcuffs (fugitive)")
   -- if LP.Team.Name == "Fugitives" then
	--	local cuff = LP.Backpack:FindFirstChild("Handcuffs (fugitive)")
	--elseif LP.Team.Name == "Guard" then
	--	local cuff = LP.Backpack:FindFirstChild("Handcuffs")
	--end

--	spawn(function()
--		fireclickdetector(workspace.Pickaxe.ClickDetector)
--		fireclickdetector(workspace.Axe.ClickDetector)
--		fireclickdetector(workspace.Taser.ClickDetector)
--		fireclickdetector(workspace.Rope.ClickDetector)
--		fireclickdetector(workspace:FindFirstChild("Handcuffs (fugitive)").ClickDetector)
--		fireclickdetector(workspace.KeyCard.ClickDetector)
--		fireclickdetector(workspace.Rope.ClickDetector)
--	end)

	--task.wait(1)
	--do
        --LP.Backpack.Taser.Parent = LP.Character
        --cuff.Parent = LP.Character
        --LP.Backpack.Grab.Parent = LP.Character
        --LP.Backpack.Rope.Parent = LP.Character
   -- end

    local oldPos = LP.Character.HumanoidRootPart.CFrame
    local loop_move = RunService.Stepped:Connect(function()
        LP.Character.HumanoidRootPart.CFrame = targasdsdaset.Character.HumanoidRootPart.CFrame + Vector3.new(0 , 5 , 0)
    end)

	--repeat
	while task.wait() do

	--pcall(function()
		if targasdsdaset.Character.RagDoll.Value == false then
		Remotes["Tase"]:FireServer("Hit", findtools("Taser"), targasdsdaset.Character.Head)
		task.wait(0.5)
		Remotes["Tase"]:FireServer("Recharge", findtools("Taser"))
		task.wait()
		end
	--end)
	--until targasdsdaset.Character.RagDoll.Value

	pcall(function()
    --repeat
	if targasdsdaset.Character.IsCuffed.Value == false then
        Remotes["IsCuffed"]:FireServer(findtool("Handcuffs"), targasdsdaset.Character)
        task.wait(0.1)
	end
    --until targasdsdaset.Character.IsCuffed.Value
	end)

    --repeat
	pcall(function()
	if targasdsdaset.Character.IsHogged.Value == false then
        Remotes["IsHog"]:FireServer(targasdsdaset.Character, "Hog")
        task.wait(0.1)
	end
	end)
   -- until targasdsdaset.Character.IsHogged.Value

   -- repeat
   pcall(function()
   if targasdsdaset.Character.IsGrabbed.Value == false then
        Remotes["Grab"]:FireServer(targasdsdaset.Character, "Grab")
        task.wait(0.1)
   end
	end)
   -- until targasdsdaset.Character.IsGrabbed.Value
	--repeat
   -- loop_move:Disconnect()
    --LP.Character.HumanoidRootPart.CFrame = oldPos
	--until 
	if	
		targasdsdaset.Character.IsGrabbed.Value == true 
		or not Players:FindFirstChild(targasdsdaset.Name) 
		or LP.Character.Humanoid.Health <= 0
	then
		loop_move:Disconnect()
    	LP.Character.HumanoidRootPart.CFrame = oldPos
		break
	end

	end
end)

combat_channel:Button("NO tp Grab Player", function()
	pcall(function()
		for idx, plr in pairs(Players:GetPlayers()) do
			if plr ~= LP 
            and CheckRange(LP.Character.HumanoidRootPart, plr.Character.HumanoidRootPart, 20)
			and plr.Character.Hostile.Value 
            --and LP.Team ~= plr.Team 
            and plr.Character.Humanoid.Health ~= 0 
			then
                print(plr)
				Remotes["Grab"]:FireServer(plr.Character, "Grab")
			end
		end
	end) 
end)

combat_channel:Button("Drop Grabed Player", function()
	--local targasdsdasadsfet = Players:FindFirstChild(TGBP)
	GW = LP.Character.GrabbingWhom.Value
	WTP = Players:FindFirstChild(GW)
	Remotes["Grab"]:FireServer(WTP.Character, "Drop")
end)

--[[
  combat_channel:Textbox("Grab Player", "Enter username", true, function(texts)
    local target = GetPlayer(texts)
    if not target then return end
	print(target)
    if target.Character:FindFirstChild("Hummnoid") and target.Character.Hostile.Value == false or target.Character.Humanoid.Health == 0 then 
		return 
	end

    local cuff = LP.Backpack:FindFirstChild("Handcuffs") or LP.Backpack:FindFirstChild("Handcuffs (fugitive)")
    do
        LP.Backpack.Taser.Parent = LP.Character
        cuff.Parent = LP.Character
        LP.Backpack.Grab.Parent = LP.Character
        LP.Backpack.Rope.Parent = LP.Character
    end

    local oldPos = LP.Character.HumanoidRootPart.CFrame
    local loop_move = RunService.Stepped:Connect(function()
        LP.Character.HumanoidRootPart.CFrame = target.Character.HumanoidRootPart.CFrame + Vector3.new(0, 10, 0)
    end)

    repeat
        Remotes["Tase"]:FireServer("Hit", LP.Character.Taser, target.Character.Head)
        Remotes["Tase"]:FireServer("Recharge", LP.Character.Taser)
        task.wait()
    until target.Character.RagDoll.Value

    repeat
        Remotes["IsCuffed"]:FireServer(cuff, target.Character)
        task.wait()
    until target.Character.IsCuffed.Value

    repeat
        Remotes["IsHog"]:FireServer(target.Character, "Hog")
        task.wait()
    until target.Character.IsHogged.Value
    repeat
        Remotes["Grab"]:FireServer(target.Character, "Grab")
        task.wait()
    until target.Character.IsGrabbed.Value

    loop_move:Disconnect()
    LP.Character.HumanoidRootPart.CFrame = oldPos
end)

]]

local function ImportAsset(id)
    Remotes["Import"]:FireServer(math.random(1, 10), id, tostring({}), tostring(id))
end

function RemoveCloth(type)
    Remotes["ImportDelete"]:FireServer(type, "Delete")
end

local extra_channel = server_tab:Channel("Extra")
local safezone = workspace.Trees.Trunk
local Ring
local LPRing
local LPzoneValue

task.spawn(function()
while task.wait() do
	if LPzoneValue == true then
		spawn(function()
			for idx, plr in pairs(Players:GetPlayers()) do
				if
					plr ~= LP 
					and CheckRange(LP.Character.HumanoidRootPart, plr.Character.HumanoidRootPart, LPRing)
					--and LP.Team ~= plr.Team
					and plr.Character.IsCuffed.Value == false
				then
					Remotes["UnCuffed"]:FireServer(plr.Character)
					task.wait(0.1)
				end
			end
		end)
	end
end
end)

extra_channel:Slider("Range", 0, 5000, LPRing, function(value)
	LPRing = value
end)

extra_channel:Toggle("LP Zone Enable", false, function (bool)
	LPzoneValue = bool
end)

extra_channel:Label("  ")



extra_channel:Toggle("Remove A Part", false, function (bool)
	partdelety = bool
end)

task.spawn(function()
	while task.wait() do
		if partdelety == true then
			pcall(function()
				for _, part in pairs(Players:GetPlayers()) do
					if part ~= LP then
						for A,B in pairs(part.Character:GetChildren()) do
							if B.Name == "A" and B.ClassName == "Accessory" then
								print(part.Name)
								B:Destroy()
							end
						end
					end
				end
			end)
		end
	end
end)

extra_channel:Label("  ")

local lagging = "Stop"
local delay = 1
task.spawn(function ()
    while task.wait(delay) do
        if lagging == "Exploit" then
			task.spawn(function()
            ImportAsset(33070696)
            ImportAsset(150381051)
			end)
            for i,a in pairs(LP.Character:GetChildren()) do
                if a.Name == "A" then
                    a:Destroy()
                end
            end
        elseif lagging == "Stopping" then
            local oldPos = LP.Character.HumanoidRootPart.CFrame
            LP.Character.Humanoid.Health = 0
            lagging = "Stoped"
			pcall(function()
            local char = LP.CharacterAdded:Wait()
            task.wait(0.45)
            char.HumanoidRootPart.CFrame = oldPos
			end)
        end
    end
end)

local delay_display = extra_channel:Label("Delay: "..tostring(delay).."s")
extra_channel:Toggle("Lagging Server", false, function (bool)
    if bool then
        lagging = "Exploit"
    else
        lagging = "Stopping"
    end
end)

extra_channel:Textbox("Lag Delay", "Enter Lagging Delay", true, function (text)
    if not tonumber(text) then return end
    delay = tonumber(text)
    delay_display:ChangeText("Delay: "..tostring(delay).."s")
end)

local team_channel = server_tab:Channel("Team")

local choosing_stay_button
choosing_stay_button = team_channel:Button("Stay on the Choosing", function ()
    local team_frame = LP.PlayerGui.Menu.TeamMenu
    if not team_frame.Visible then choosing_stay_button:Delete() return end
    team_frame.Visible = false
    LP.PlayerGui.Animation.Enabled = true
    LP.PlayerGui.Stamina.StaminaBarFrame.Visible = true
    team_frame.Parent.OpenAndClose.Visible = true
    LP.Character.Humanoid.Health = 0
    LP.CharacterAdded:Connect(function(char)
        --repeat
        task.wait(0.7)
            char:WaitForChild("HumanoidRootPart").CFrame = CFrame.new(282.811157, 50.99613762, -69.6557007, 0.826119781, -6.12301321e-08, 0.563494503, 6.9332371e-09, 1, 9.84968693e-08, -0.563494503, -7.74633762e-08, 0.826119781)
            task.wait(0.2)
       -- until char:WaitForChild("HumanoidRootPart").CFrame == CFrame.new(282.811157, 5.99613762, -69.6557007, 0.826119781, -6.12301321e-08, 0.563494503, 6.9332371e-09, 1, 9.84968693e-08, -0.563494503, -7.74633762e-08, 0.826119781)
    LP.PlayerGui.Animation.Enabled = true
    LP.PlayerGui.Stamina.StaminaBarFrame.Visible = true
    team_frame.Parent.OpenAndClose.Visible = true
	end)
    choosing_stay_button:Delete()
end)

local civilian_click = (function ()
    for i,v in pairs(workspace:GetChildren()) do
        if v:FindFirstChild("LeaveTeamHostage") and v:FindFirstChild("ClickDetector") then
            return v.ClickDetector
        end
    end
end)()
team_channel:Button("Change to Guard", function()
    local police_gui = LP.PlayerGui.TeamChangePolice.Frame
    police_gui.Visible = true
end)

team_channel:Button("Change to Prisoner", function()
    local prisoner_gui = LP.PlayerGui.TeamChangePrisoner.Frame
    prisoner_gui.Visible = true
end)

team_channel:Button("Change to Fugitive", function()
    if LP.Team.Name == "Guard" then
        local prisoner_gui = LP.PlayerGui.TeamChangePrisoner.Frame
        prisoner_gui.Visible = true
        repeat
            task.wait()
        until prisoner_gui.Visible == false
    end
    local fugitives_gui = LP.PlayerGui.TeamChangeFugitive.Frame
    fugitives_gui.Visible = true
end)

team_channel:Button("Change to Civilian", function()
    fireclickdetector(civilian_click)
end)

if LP.Team.Name ~= "Choosing" then
    choosing_stay_button:Delete()
end

local click_channel = client_tab:Channel("Door ClickDetector")

task.spawn(function()
	while task.wait() do
		if opendoor then pcall(function()
		for v,b in pairs(workspace.Doors:GetChildren()) do
    	if b.Value.Value == false then
        task.wait()
        Remotes["DoorOpener"]:FireServer(b.Name, "Open")
		end
		end
		end) 
		end
	end
end)


task.spawn(function()
	while task.wait() do
		if closedoor then pcall(function()
		for v,b in pairs(workspace.Doors:GetChildren()) do
    	if b.Value.Value == true then
        task.wait()
        Remotes["DoorOpener"]:FireServer(b.Name, "Close")
		end
		end
		end) end
	end
end)



task.spawn(function()
	while task.wait() do
		if HouseOpen then pcall(function()

			for i,v in pairs(workspace.Houses:GetDescendants()) do
				if v:IsA("ProximityPrompt") then
				if v.Name == "OpenPrompt" then
					if v.Parent:FindFirstChild("IsOpen").Value == false then
					pcall(function ()
						fireproximityprompt(v)
					end)
				end
				end
				end
			end

		end) end
	end
end)

task.spawn(function()
	while task.wait() do
		if HouseClose then pcall(function()

			for i,v in pairs(workspace.Houses:GetDescendants()) do
				if v:IsA("ProximityPrompt") then
				if v.Name == "OpenPrompt" then
					if v.Parent:FindFirstChild("IsOpen").Value == true then
					pcall(function ()
						fireproximityprompt(v)
					end)
				end
				end
				end
			end

		end) end
	end
end)


task.spawn(function()
	while task.wait() do
		if HouseLock2 then pcall(function()

			for i,v in pairs(workspace.Houses:GetDescendants()) do
				if v:IsA("ProximityPrompt") then
				if v.Name == "LockPrompt" then
					if v.Parent.Parent.Click:FindFirstChild("IsLocked").Value == true then
					pcall(function ()
						fireproximityprompt(v)
					end)
				end
				end
				end
			end

		end) end
	end
end)

task.spawn(function()
	while task.wait() do
		if HouseLock1 then pcall(function()

for i,v in pairs(workspace.Houses:GetDescendants()) do
    if v:IsA("ProximityPrompt") then
    if v.Name == "LockPrompt" then
        if v.Parent.Parent.Click:FindFirstChild("IsLocked").Value == false then
        pcall(function ()
            fireproximityprompt(v)
        end)
    end
    end
    end
end

		end) end
	end
end)


click_channel:Button("Chamber", function()
	for v,b in pairs(workspace.Unfinished:GetChildren()) do
		if b.Name == "Chamber" then
			print(b)
			task.wait()
			fireclickdetector(b.Door.Hat.ClickDetector)
		end
	end
end)

click_channel:Toggle("Open Door", false, function (bool)
	opendoor = bool
end)

click_channel:Toggle("Close Door", false, function (bool)
	closedoor = bool
end)


click_channel:Toggle("Open House", false, function (bool)
	HouseOpen = bool
end)

click_channel:Toggle("Close House", false, function (bool)
	HouseClose = bool
end)

click_channel:Toggle("Lock On House", false, function (bool)
	HouseLock1 = bool
end)

click_channel:Toggle("Lock Off House", false, function (bool)
	HouseLock2 = bool
end)


click_channel:Button("Base Main Door", function()
    fireclickdetector(workspace.Base.Door.Handle1.ClickDetector)
end)

click_channel:Button("Base Jail1 Door", function()
    fireclickdetector(workspace.BasementCell.BarDoor.Lock.ClickDetector)
end)

click_channel:Button("Base Jail2 Door", function()
    fireclickdetector(workspace.BasementCell.Bar.BarDoor.Lock.ClickDetector)
end)

local avatar_channel = client_tab:Channel("Avatar")

avatar_channel:Button("Remote Team Cloth", function()
    RemoveCloth("Shirt")
    RemoveCloth("Pants")
end)

avatar_channel:Button("Naked", function()
    RemoveCloth("Shirt")
    RemoveCloth("Pants")
    RemoveCloth("Ogshirt")
    RemoveCloth("OGpants")
end)

avatar_channel:Textbox("Copy Player Avatar", "Enter username or userid", true, function(text)
    for _, _ in pairs(LP.Character:GetChildren()) do
        RemoveCloth(_.Name)
    end
    if not tonumber(text) then
        local target = GetPlayer(text)
        if not target then return end
        local accessoriesTable = Players:GetHumanoidDescriptionFromUserId(target.UserId):GetAccessories(true)
        for _, accessoryInfo in ipairs(accessoriesTable) do 
            ImportAsset(accessoryInfo.AssetId)
        end
        ImportAsset(Players:GetHumanoidDescriptionFromUserId(target.UserId).Shirt)
        ImportAsset(Players:GetHumanoidDescriptionFromUserId(target.UserId).Pants)
    else
        local accessoriesTable = Players:GetHumanoidDescriptionFromUserId(text):GetAccessories(true)
        for _, accessoryInfo in ipairs(accessoriesTable) do 
            ImportAsset(accessoryInfo.AssetId)
        end
        ImportAsset(Players:GetHumanoidDescriptionFromUserId(text).Shirt)
        ImportAsset(Players:GetHumanoidDescriptionFromUserId(text).Pants)
    end
end)

avatar_channel:Textbox("Copy Item","Enter", true, function(text)
 
            ImportAsset(text)

end)

local copy_avatar = avatar_channel:Dropdown(
    "Copy",
    names,
    function(bool)

		dpname = Players:FindFirstChild(bool).DisplayName
		
		Chat["SayMessageRequest"]:FireServer( "/nick "..dpname,"All")

		userfree = Players:FindFirstChild(bool).UserId
		--print(userfree)
		for _, _ in pairs(LP.Character:GetChildren()) do
			RemoveCloth(_.Name)
		end
		task.wait(0.2)
        local accessoriesTable = Players:GetHumanoidDescriptionFromUserId(userfree):GetAccessories(true)
        for _, accessoryInfo in ipairs(accessoriesTable) do 
            ImportAsset(accessoryInfo.AssetId)
        end
        ImportAsset(Players:GetHumanoidDescriptionFromUserId(userfree).Shirt)
        ImportAsset(Players:GetHumanoidDescriptionFromUserId(userfree).Pants)

    end
)

local char_channel = client_tab:Channel("Character")

char_channel:Button("Reset Character", function()
    LP.Character.Humanoid.Health = 0
end)

char_channel:Slider("WalkSpeed", 0, 500, LP.Character.Humanoid.WalkSpeed, function(value)

end)

char_channel:Textbox("Set Fake Name","Enter", true, function(text)
 
	aONT = text

end)

char_channel:Toggle("MY SKIN", false, function (bool)
	NOsdfadfa = bool
end)

char_channel:Toggle("Faka Name", false, function (bool)
	Fakename = bool
end)


task.spawn(function()
	while task.wait(0.5) do
		if Randoms then 
			local nicknames = {"NULL", "Hacker", "Unknown", "Anonymous","Non-existent","Error"}

			-- 랜덤으로 닉네임 선택
			local randomIndex = math.random(1, #nicknames)
			local selectedNickname = nicknames[randomIndex]
			Chat["SayMessageRequest"]:FireServer( "/nick "..selectedNickname,"All")
		 end
	end
end)


char_channel:Toggle("Random Name", false, function (bool)
	Randoms = bool
end)

char_channel:Toggle("Spawn Dead Point", false, function (bool)
	spawnfun = bool
end)

char_channel:Toggle("SKIN??", false, function (bool)
	Furry = bool
end)

char_channel:Dropdown(
    "Chooings",
	{"Furry","FurryGirl","Maid","PINK"},
    function(bool)
		CUSKIN = bool
    end
)

local whitelist = Troll_tab:Channel("White and Black List")
local WLA
local whitelistuser = {}

local function RemoveNonExistingPlayers()
    for i = #whitelistuser, 1, -1 do
        local playerName = whitelistuser[i]
        local player = Players:FindFirstChild(playerName)
        if not player then
            table.remove(whitelistuser, i) -- whitelistuser 테이블에서 해당 플레이어 제거
			print(whitelistuser,i ,"remove")
        end
    end
end

task.spawn(function()
	while true do
		RemoveNonExistingPlayers()
		wait(5) -- 5초 대기
	end
end)

local WLT = whitelist:Dropdown(
	"white List",
	names,
	function(bool)
		_G.targetr = bool
end)

whitelist:Button("Add White List", function()
	if not table.find(whitelistuser, _G.targetr) then
		table.insert(whitelistuser, _G.targetr)
		print("added", _G.targetr)
	end
end)

whitelist:Button("Remove White List", function()
    for i, name in ipairs(whitelistuser) do
        if name ==  _G.targetr then
			print(i)
            print("Selected user:", name)
			table.remove(whitelistuser,i)
			print("removed", _G.targetr)
        end
    end
end)

whitelist:Button("Clear White List", function()
	for k in pairs(whitelistuser) do
		print(whitelistuser[k],"Clear List")
		whitelistuser[k] = nil
	end
end)

local Oneteam = Troll_tab:Channel("Only One")
_G.OneTeam = nil
_G.OneTeamhit = false

Oneteam:Dropdown(
    "Pick Team",
		{"Guard","Prisoner","Fugitives","Choosing","Hostage","Civilian"},
    function(bool)
		print(bool)
        _G.OneTeam = bool
    end
)

Oneteam:Toggle("only hit one Team?", false, function(bool)
    _G.OneTeamhit = bool
end)

Oneteam:Toggle("only hit Locked Player?", false, function(bool)
    _G.LockOnhit = bool
end)

local ggez = Troll_tab:Channel("Game Over Yet Kid")

task.spawn(function()
    while task.wait() do
		pcall(function()
			if blockitemwl then
				for idx, plr in pairs(Players:GetPlayers()) do
					if plr ~= LP and table.find(whitelistuser, plr.Name) then
						Remotes["UnCuffed"]:FireServer(plr.Character)
					end
				end
			end
		end) 
	end
end)

task.spawn(function()
    while task.wait() do
		--pcall(function()
			if jajajajajajajajeztaser then
				for userId, username in pairs(whitelistuser) do
					local player =  game:GetService("Players"):WaitForChild(username).Character
					if player == nil then
						RemoveNonExistingPlayers()
						return
					end
					if player then
						pcall(function()
							local args = {
								[1] = "Hit",
								[2] = game:GetService("Players").LocalPlayer.Backpack.Taser,
								[3] = player.Head
							}
							
							game:GetService("ReplicatedStorage"):WaitForChild("Tase"):FireServer(unpack(args))
							
							wait(0.1)
							--TaserRemote:FireServer(	"Recharge", game:GetService("Players").LocalPlayer.Backpack.Taser)
							
							local args = {
								[1] = "Recharge",
								[2] = game:GetService("Players").LocalPlayer.Backpack.Taser
							}
							
							game:GetService("ReplicatedStorage"):WaitForChild("Tase"):FireServer(unpack(args))
						end)
						wait(0.2) -- 0.2초 대기
					end
				end
			end
		--end) 
	end
end)

ggez:Toggle("blocked item jajaja", false, function(bool)
    blockitemwl = bool
end)

ggez:Toggle("Taser User jajaja", false, function(bool)
    jajajajajajajajeztaser = bool
end)


local DiePos 

LP.CharacterAdded:Connect(function(char)
    if LP.Team.Name ~= "Choosing" then choosing_stay_button:Delete() end

    if Fakename == true then 
		if aONT == nil then 
			--DiscordLib:Notification("Notification", "Fakename is Nil Brb", "Okay!")
			Chat["SayMessageRequest"]:FireServer( "/nick ❤️","All")
		else
		task.wait(0.2)
		--DiscordLib:Notification("Notification", "Fakename is "..aONT, "Okay!")
		Chat["SayMessageRequest"]:FireServer( "/nick "..aONT,"All")
		end
	end

	if Furry == true then
		task.wait(0.7)
		for _, _ in pairs(LP.Character:GetChildren()) do
			RemoveCloth(_.Name)
		end
        if CUSKIN == "Furry" then
            ImportAsset(12333523895)
            ImportAsset(12339085834)
            ImportAsset(12339086845)
            ImportAsset(11190054343)
            ImportAsset(11284310004)
           -- ImportAsset(11697630021)
        elseif CUSKIN == "FurryGirl" then
            ImportAsset(12669535992)
            ImportAsset(10824058593)
            ImportAsset(10929905191)
            ImportAsset(13421707966)
            ImportAsset(12316077627)
            ImportAsset(15761210122)
            ImportAsset(11189999097)
            ImportAsset(16680911837)

			ImportAsset(7963938171)
			ImportAsset(11328204822)

            --ImportAsset(16680993249)
           -- ImportAsset(11697630021)
		elseif CUSKIN == "Maid" then
			ImportAsset(6196049792)
			ImportAsset(6174796730)
			ImportAsset(7168327034)
			ImportAsset(7240996699)
			ImportAsset(13412339324)
			ImportAsset(9731244002)
			ImportAsset(12316077627)
			ImportAsset(11189999097)
			ImportAsset(15728109937)
			ImportAsset(16337439844)

			--ImportAsset(11697630021)
		elseif CUSKIN == "PINK" then
			ImportAsset(16172116662)
			ImportAsset(14295208398)
			ImportAsset(15741334663)
			ImportAsset(16260651560)
			ImportAsset(14205363577)
			ImportAsset(14281188756)

			ImportAsset(8295367528)
			ImportAsset(7157324491)

			ImportAsset(12383395027)
			ImportAsset(12651449547)

			--ImportAsset(11697630021)
        end
	end

	if NOsdfadfa == true then
		task.wait(0.5)
		for _, _ in pairs(LP.Character:GetChildren()) do
			RemoveCloth(_.Name)
		end
		local accessoriesTable = Players:GetHumanoidDescriptionFromUserId(LP.UserId):GetAccessories(true)
    	for _, accessoryInfo in ipairs(accessoriesTable) do 
        ImportAsset(accessoryInfo.AssetId)
    	end
    	ImportAsset(Players:GetHumanoidDescriptionFromUserId(LP.UserId).Shirt)
    	ImportAsset(Players:GetHumanoidDescriptionFromUserId(LP.UserId).Pants)
	end

	if spawnfun == true then
        char:WaitForChild("HumanoidRootPart").CFrame = DiePos
	end

	task.wait(0.2)
	spawn(function()
	LP.Character.Humanoid.AutoJumpEnabled = false
	game:GetService("Players").LocalPlayer.AutoJumpEnabled = false
	--LP.Character.JumpLimit.Enabled = false
	end)

	local ui = game:GetService("Players").LocalPlayer.PlayerGui.Stamina.StaminaBarFrame

	spawn(function()
		ui.BackgroundTransparency = 0.6
	--  ui.ImageLabel:Destroy()
		ui.BackgroundColor3 = Color3.new(1,1,0)
		ui.Size = UDim2.new(0.4, 0,0.01, 0)
		ui.AnchorPoint = Vector2.new(0.5,0.5)
		ui.Position = UDim2.new(0.5,0,0.85,0)
		local corner = Instance.new("UICorner")
		corner.Parent = ui.StaminaBar
		corner:Clone().Parent = ui.StaminaBar.Bar
		local ci = plrGui:WaitForChild("CharaIndicator")
		ci:WaitForChild("Indicator").AnchorPoint = Vector2.new(0.5,0.5)
		ci.Indicator.Position = UDim2.new(0.5,0,0.93,0)
	end)

end)

task.spawn(function()
	for v,b in pairs(workspace:GetChildren()) do
		if b.Name == "Border" then
			task.wait()
			b:Destroy()
		end
	end
end)

--workspace["Cave Fog"]

task.spawn(function()
	for v,b in pairs(workspace.Unfinished:GetChildren()) do
		if b.Name == "DeadlyFloor" then
			task.wait()
			b:Destroy()
		end
	end
end)

task.spawn(function()
	for v,b in pairs(workspace.Unfinished:GetChildren()) do
		if b.Name == "Cave Fog" then
			task.wait()
			b:Destroy()
		end
	end
end)


task.spawn(function()
	while task.wait(1) do
		if game.Players.LocalPlayer.Character.Humanoid.Health == 0 then
			--if DiePos ~= LP.Character.Torso.CFrame then
			DiePos = LP.Character.Torso.CFrame
			--end
		end
	end
end)

task.spawn(function()
	while task.wait() do
		pcall(function()
			TargetLockon:ChangeText("LockOn: "..tostring(_G.targetr))
			TargetLockons:ChangeText("LockOn: "..tostring(_G.targetr))
		end)
	end
end)

plrs.PlayerAdded:Connect(function(player)
	playerlista:Clear()
	copy_avatar:Clear()
	GarbPlayerList:Clear()
	WLT:Clear()
	task.wait(1)
	for idx, plr in pairs(game.Players:GetPlayers()) do
		if not table.find(userOwner, plr.Name) then
		playerlista:Add(plr.Name)
		copy_avatar:Add(plr.Name)
		GarbPlayerList:Add(plr.Name)
		WLT:Add(plr.Name)
		end
		--print("add",player.Name)
	end
end)

plrs.PlayerRemoving:Connect(function(player)
	playerlista:Clear()
	copy_avatar:Clear()
	GarbPlayerList:Clear()
	WLT:Clear()
	task.wait(1)
	for idx, plr in pairs(game.Players:GetPlayers()) do
		if not table.find(userOwner, plr.Name) then
		playerlista:Add(plr.Name)
		copy_avatar:Add(plr.Name)
		GarbPlayerList:Add(plr.Name)
		WLT:Add(plr.Name)
		end
		--print("add",player.Name)
	end
	--print("remove",player.Name)
end)

loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()





--[[
local toolname = "Taser"
game.Players.LocalPlayer.character.Humanoid:EquipTool(game.Workspace:FindFirstChild(toolname))
]]