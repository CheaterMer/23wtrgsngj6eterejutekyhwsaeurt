_G.targetr = nil

-- 필요한 서비스 및 변수 불러오기
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

-- 타겟 찾기 함수
local function findTarget()
    -- 로컬 플레이어
    local localPlayer = Players.LocalPlayer

    -- 마우스의 현재 위치 얻기
    local mouse = localPlayer:GetMouse()
    local mousePosition = mouse.Hit.p

    -- 가장 가까운 다른 팀 플레이어 찾기
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, player in ipairs(Players:GetPlayers()) do
        -- 로컬 플레이어와 같은 팀이면서 검사
        if player.Team ~= localPlayer.Team and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local playerPosition = player.Character.HumanoidRootPart.Position
            local distance = (playerPosition - mousePosition).magnitude

            -- 이전에 찾은 플레이어보다 더 가까운 플레이어를 찾으면 갱신
            if distance < shortestDistance then
                closestPlayer = player
                shortestDistance = distance
            end
        end
    end

    return closestPlayer
end

-- 'H' 키 입력 함수
local selectKey = Enum.KeyCode.H
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == selectKey then
        -- H 키 입력 시 실행할 동작을 여기에 추가하세요.
        -- 예: print("H key pressed")
        local target = findTarget() -- 타겟 찾기 함수 호출
        if target then
            -- 타겟을 찾았을 때의 동작을 여기에 추가하세요.
            print("Target found: " .. target.Name)
            _G.targetr = target.Name
        else
            -- 타겟을 찾지 못했을 때의 동작을 여기에 추가하세요.
            print("No target found")
        end
    end
end)


-- 필요한 서비스 및 변수 불러오기
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

-- GUI 생성 함수
local function createGUI()
    -- GUI 생성 코드 작성
    -- (앞서 작성한 GUI 생성 함수를 여기에 넣으세요)
end

-- GUI 생성
local nameLabel, teamLabel, healthLabel, hostileLabel, isCuffedLabel, isHoggedLabel = createGUI()

-- 이전 타겟 정보
local previousTarget = nil

-- 정보 업데이트 함수
local function updateInfo(target)
    -- 타겟이 있으면 정보 업데이트
    if target then
        -- 이전 타겟과 현재 타겟이 같은지 확인하여 변경되지 않도록 함
        if target ~= previousTarget then
            nameLabel.Text = "Name: " .. target.Name
            teamLabel.Text = "Team: " .. target.Team.Name
            healthLabel.Text = "Health: " .. tostring(target.Character.Humanoid.Health)
            hostileLabel.Text = "Hostile: " .. tostring(target.Character:FindFirstChild("Hostile").Value)
            isCuffedLabel.Text = "IsCuffed: " .. tostring(target.Character:FindFirstChild("IsCuffed").Value)
            isHoggedLabel.Text = "IsHogged: " .. tostring(target.Character:FindFirstChild("IsHogged").Value)
            previousTarget = target
        end
    else
        -- 타겟이 없으면 GUI를 초기화
        nameLabel.Text = "No target found"
        teamLabel.Text = ""
        healthLabel.Text = ""
        hostileLabel.Text = ""
        isCuffedLabel.Text = ""
        isHoggedLabel.Text = ""
        previousTarget = nil
    end
end

-- GUI 생성 및 정보 업데이트
updateInfo(nil) -- 초기화

-- 정보 업데이트를 매 프레임마다 실행
RunService.RenderStepped:Connect(function()
    local target = findTarget() -- 타겟 찾기 함수 호출
    updateInfo(target) -- 정보 업데이트 함수 호출
end)
