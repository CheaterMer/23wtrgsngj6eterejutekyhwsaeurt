_G.targetr = nil

-- GUI 생성
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 200, 0, 250)
Frame.Position = UDim2.new(0, 10, 0.5, -125)
Frame.BackgroundTransparency = 0.5
Frame.BackgroundColor3 = Color3.new(0, 0, 0)
Frame.Parent = ScreenGui

local displayNameLabel = Instance.new("TextLabel")
--displayNameLabel.Name = "displayNameLabel"
displayNameLabel.Size = UDim2.new(1, 0, 0, 20)
displayNameLabel.Position = UDim2.new(0, 0, 0, -20)
displayNameLabel.Text = "Display Name: N/A"
displayNameLabel.TextColor3 = Color3.new(1, 1, 1)
displayNameLabel.Parent = Frame

-- 이름 레이블
local nameLabel = Instance.new("TextLabel")
nameLabel.Name = "NameLabel"
nameLabel.Size = UDim2.new(1, 0, 0, 20)
nameLabel.Position = UDim2.new(0, 0, 0, 0)
nameLabel.Text = "Name: N/A"
nameLabel.TextColor3 = Color3.new(1, 1, 1)
nameLabel.Parent = Frame

-- 팀 레이블
local teamLabel = Instance.new("TextLabel")
teamLabel.Name = "TeamLabel"
teamLabel.Size = UDim2.new(1, 0, 0, 20)
teamLabel.Position = UDim2.new(0, 0, 0, 20)
teamLabel.Text = "Team: N/A"
teamLabel.TextColor3 = Color3.new(1, 1, 1)
teamLabel.Parent = Frame

-- 채력 레이블
local healthLabel = Instance.new("TextLabel")
healthLabel.Name = "HealthLabel"
healthLabel.Size = UDim2.new(1, 0, 0, 20)
healthLabel.Position = UDim2.new(0, 0, 0, 40)
healthLabel.Text = "Health: N/A"
healthLabel.TextColor3 = Color3.new(1, 1, 1)
healthLabel.Parent = Frame

-- 추가 정보 레이블들
local hostileLabel = Instance.new("TextLabel")
hostileLabel.Name = "HostileLabel"
hostileLabel.Size = UDim2.new(1, 0, 0, 20)
hostileLabel.Position = UDim2.new(0, 0, 0, 60)
hostileLabel.Text = "Hostile: N/A"
hostileLabel.TextColor3 = Color3.new(1, 1, 1)
hostileLabel.Parent = Frame

local isCuffedLabel = Instance.new("TextLabel")
isCuffedLabel.Name = "IsCuffedLabel"
isCuffedLabel.Size = UDim2.new(1, 0, 0, 20)
isCuffedLabel.Position = UDim2.new(0, 0, 0, 80)
isCuffedLabel.Text = "IsCuffed: N/A"
isCuffedLabel.TextColor3 = Color3.new(1, 1, 1)
isCuffedLabel.Parent = Frame

local isHoggedLabel = Instance.new("TextLabel")
isHoggedLabel.Name = "IsHoggedLabel"
isHoggedLabel.Size = UDim2.new(1, 0, 0, 20)
isHoggedLabel.Position = UDim2.new(0, 0, 0, 100)
isHoggedLabel.Text = "IsHogged: N/A"
isHoggedLabel.TextColor3 = Color3.new(1, 1, 1)
isHoggedLabel.Parent = Frame

local isLockedLabel = Instance.new("TextLabel")
isLockedLabel.Name = "IsLockedLabel"
isLockedLabel.Size = UDim2.new(1, 0, 0, 20)
isLockedLabel.Position = UDim2.new(0, 0, 0, 120)
isLockedLabel.Text = "IsLocked: N/A"
isLockedLabel.TextColor3 = Color3.new(1, 1, 1)
isLockedLabel.Parent = Frame

local frontCuffedLabel = Instance.new("TextLabel")
frontCuffedLabel.Name = "FrontCuffedLabel"
frontCuffedLabel.Size = UDim2.new(1, 0, 0, 20)
frontCuffedLabel.Position = UDim2.new(0, 0, 0, 140)
frontCuffedLabel.Text = "FrontCuffed: N/A"
frontCuffedLabel.TextColor3 = Color3.new(1, 1, 1)
frontCuffedLabel.Parent = Frame

local grabbingLabel = Instance.new("TextLabel")
grabbingLabel.Name = "GrabbingLabel"
grabbingLabel.Size = UDim2.new(1, 0, 0, 20)
grabbingLabel.Position = UDim2.new(0, 0, 0, 160)
grabbingLabel.Text = "Grabbing: N/A"
grabbingLabel.TextColor3 = Color3.new(1, 1, 1)
grabbingLabel.Parent = Frame

local downStateLabel = Instance.new("TextLabel")
downStateLabel.Name = "DownStateLabel"
downStateLabel.Size = UDim2.new(1, 0, 0, 20)
downStateLabel.Position = UDim2.new(0, 0, 0, 180)
downStateLabel.Text = "DownState: N/A"
downStateLabel.TextColor3 = Color3.new(1, 1, 1)
downStateLabel.Parent = Frame

local grabbingWhomLabel = Instance.new("TextLabel")
grabbingWhomLabel.Name = "GrabbingWhomLabel"
grabbingWhomLabel.Size = UDim2.new(1, 0, 0, 20)
grabbingWhomLabel.Position = UDim2.new(0, 0, 0, 200)
grabbingWhomLabel.Text = "GrabbingWhom: N/A"
grabbingWhomLabel.TextColor3 = Color3.new(1, 1, 1)
grabbingWhomLabel.Parent = Frame

local grabbedByWhomLabel = Instance.new("TextLabel")
grabbedByWhomLabel.Name = "GrabbedByWhomLabel"
grabbedByWhomLabel.Size = UDim2.new(1, 0, 0, 20)
grabbedByWhomLabel.Position = UDim2.new(0, 0, 0, 220)
grabbedByWhomLabel.Text = "GrabbedByWhom: N/A"
grabbedByWhomLabel.TextColor3 = Color3.new(1, 1, 1)
grabbedByWhomLabel.Parent = Frame

-- 필요한 서비스 및 변수 불러오기
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

-- 타겟 찾기 함수
local function findTarget()
    -- 로컬 플레이어
    local localPlayer = Players.LocalPlayer

    -- 마우스의 현재 위치 얻기
    local mouse = localPlayer:GetMouse()
    local mousePosition = mouse.Hit.p

    -- 가장 가까운 다른 팀 플레이어 찾기
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, player in ipairs(Players:GetPlayers()) do
        -- 로컬 플레이어와 같은 팀이면서 검사
        if 
        player ~= localPlayer 
        and player.Character 
        and player.Character:FindFirstChild("HumanoidRootPart") then
            local playerPosition = player.Character.HumanoidRootPart.Position
            local distance = (playerPosition - mousePosition).magnitude

            -- 이전에 찾은 플레이어보다 더 가까운 플레이어를 찾으면 갱신
            if distance < shortestDistance then
                closestPlayer = player
                shortestDistance = distance
            end
        end
    end

    return closestPlayer
end

-- 'H' 키 입력 함수
local selectKey = Enum.KeyCode.H
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == selectKey then
        -- H 키 입력 시 실행할 동작을 여기에 추가하세요.
        -- 예: print("H key pressed")
        local target = findTarget() -- 타겟 찾기 함수 호출
        if target then
            -- 타겟을 찾았을 때의 동작을 여기에 추가하세요.
            print("Target found: " .. target.Name)
            _G.targetr = target.Name
        else
            -- 타겟을 찾지 못했을 때의 동작을 여기에 추가하세요.
            print("No target found")
        end
    end
end)


-- 필요한 서비스 및 변수 불러오기
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

-- 이전 타겟 초기화
local previousTarget = nil

local function updateDisplayNameLabel(target)
    if target then
        displayNameLabel.Text = "Display Name: " .. (target.DisplayName or "N/A")
    else
        displayNameLabel.Text = "Display Name: N/A"
    end
end

local function updateNameLabel(target)
    if target then
        nameLabel.Text = "Name: " .. (target.Name or "N/A")
    else
        nameLabel.Text = "Name: N/A"
    end
end

local function updateTeamLabel(target)
    if target then
        teamLabel.Text = "Team: " .. (target.Team and target.Team.Name or "N/A")
    else
        teamLabel.Text = "Team: N/A"
    end
end

local function updateHealthLabel(target)
    if target and target.Character and target.Character:FindFirstChild("Humanoid") then
        local health = math.floor(target.Character.Humanoid.Health)
        healthLabel.Text = "Health: " .. tostring(health)
    else
        healthLabel.Text = "Health: N/A"
    end
end

local function updateHostileLabel(target)
    if target and target.Character and target.Character:FindFirstChild("Hostile") then
        hostileLabel.Text = "Hostile: " .. tostring(target.Character.Hostile.Value)
    else
        hostileLabel.Text = "Hostile: N/A"
    end
end

local function updateIsCuffedLabel(target)
    if target and target.Character and target.Character:FindFirstChild("IsCuffed") then
        isCuffedLabel.Text = "IsCuffed: " .. tostring(target.Character.IsCuffed.Value)
    else
        isCuffedLabel.Text = "IsCuffed: N/A"
    end
end

local function updateIsHoggedLabel(target)
    if target and target.Character and target.Character:FindFirstChild("IsHogged") then
        isHoggedLabel.Text = "IsHogged: " .. tostring(target.Character.IsHogged.Value)
    else
        isHoggedLabel.Text = "IsHogged: N/A"
    end
end

local function updateIsLockedLabel(target)
    if target and target.Character and target.Character:FindFirstChild("IsLocked") then
        isLockedLabel.Text = "IsLocked: " .. tostring(target.Character.IsLocked.Value)
    else
        isLockedLabel.Text = "IsLocked: N/A"
    end
end

local function updateFrontCuffedLabel(target)
    if target and target.Character and target.Character:FindFirstChild("FrontCuffed") then
        frontCuffedLabel.Text = "FrontCuffed: " .. tostring(target.Character.FrontCuffed.Value)
    else
        frontCuffedLabel.Text = "FrontCuffed: N/A"
    end
end

local function updateGrabbingLabel(target)
    if target and target.Character and target.Character:FindFirstChild("Grabbing") then
        grabbingLabel.Text = "Grabbing: " .. tostring(target.Character.Grabbing.Value)
    else
        grabbingLabel.Text = "Grabbing: N/A"
    end
end

local function updateDownStateLabel(target)
    if target and target.Character and target.Character:FindFirstChild("DownState") then
        downStateLabel.Text = "DownState: " .. tostring(target.Character.DownState.Value)
    else
        downStateLabel.Text = "DownState: N/A"
    end
end

local function updateGrabbingWhomLabel(target)
    if target and target.Character and target.Character:FindFirstChild("GrabbingWhom") then
        grabbingWhomLabel.Text = "GrabbingWhom: " .. tostring(target.Character.GrabbingWhom.Value)
    else
        grabbingWhomLabel.Text = "GrabbingWhom: N/A"
    end
end

local function updateGrabbedByWhomLabel(target)
    if target and target.Character and target.Character:FindFirstChild("GrabbedByWhom") then
        grabbedByWhomLabel.Text = "GrabbedByWhom: " .. tostring(target.Character.GrabbedByWhom.Value)
    else
        grabbedByWhomLabel.Text = "GrabbedByWhom: N/A"
    end
end

local function updateAllLabels()
    updateDisplayNameLabel()
    updateNameLabel()
    updateTeamLabel()
    updateHealthLabel()
    updateHostileLabel()
    updateIsCuffedLabel()
    updateIsHoggedLabel()
    updateIsLockedLabel()
    updateFrontCuffedLabel()
    updateGrabbingLabel()
    updateDownStateLabel()
    updateGrabbingWhomLabel()
    updateGrabbedByWhomLabel()
end

local function updateInfo(target)
    -- 타겟이 있으면 정보 업데이트
    if target then
        -- 이전 타겟과 현재 타겟이 같은지 확인하여 변경되지 않도록 함
        if target ~= previousTarget then
            updateDisplayNameLabel(target)
            updateNameLabel(target)
            updateTeamLabel(target)
            updateHealthLabel(target)
            updateHostileLabel(target)
            updateIsCuffedLabel(target)
            updateIsHoggedLabel(target)
            updateIsLockedLabel(target)
            updateFrontCuffedLabel(target)
            updateGrabbingLabel(target)
            updateDownStateLabel(target)
            updateGrabbingWhomLabel(target)
            updateGrabbedByWhomLabel(target)
            previousTarget = target
        elseif previousTarget == target then
            updateDisplayNameLabel(target)
            updateNameLabel(target)
            updateTeamLabel(target)
            updateHealthLabel(target)
            updateHostileLabel(target)
            updateIsCuffedLabel(target)
            updateIsHoggedLabel(target)
            updateIsLockedLabel(target)
            updateFrontCuffedLabel(target)
            updateGrabbingLabel(target)
            updateDownStateLabel(target)
            updateGrabbingWhomLabel(target)
            updateGrabbedByWhomLabel(target)
        else
            -- 타겟이 없으면 GUI를 초기화
            updateAllLabels()
            previousTarget = nil
        end
    end
end


-- GUI 생성 및 정보 업데이트
updateInfo(nil) -- 초기화

-- 정보 업데이트를 매 프레임마다 실행
--RunService.RenderStepped:Connect(function()
while task.wait() do
    task.wait(0.1)
    pcall(function()
        local target = game:GetService("Players"):FindFirstChild(_G.targetr)
        if target then
            updateInfo(target)
        else
            updateInfo(nil)
        end
    end) -- 정보 업데이트 함수 호출
end
--end)
