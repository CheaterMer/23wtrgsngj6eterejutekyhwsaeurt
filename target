_G.targetr = nil

-- 필요한 서비스 및 변수 불러오기
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")

-- 타겟 찾기 함수
local function findTarget()
    -- 로컬 플레이어
    local localPlayer = Players.LocalPlayer

    -- 마우스의 현재 위치 얻기
    local mouse = localPlayer:GetMouse()
    local mousePosition = mouse.Hit.p

    -- 가장 가까운 다른 팀 플레이어 찾기
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, player in ipairs(Players:GetPlayers()) do
        -- 로컬 플레이어와 같은 팀이면서 검사
        if player.Team ~= localPlayer.Team and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local playerPosition = player.Character.HumanoidRootPart.Position
            local distance = (playerPosition - mousePosition).magnitude

            -- 이전에 찾은 플레이어보다 더 가까운 플레이어를 찾으면 갱신
            if distance < shortestDistance then
                closestPlayer = player
                shortestDistance = distance
            end
        end
    end

    return closestPlayer
end

-- 'H' 키 입력 함수
local selectKey = Enum.KeyCode.H
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == selectKey then
        -- H 키 입력 시 실행할 동작을 여기에 추가하세요.
        -- 예: print("H key pressed")
        local target = findTarget() -- 타겟 찾기 함수 호출
        if target then
            -- 타겟을 찾았을 때의 동작을 여기에 추가하세요.
            print("Target found: " .. target.Name)
            _G.targetr = target.Name
        else
            -- 타겟을 찾지 못했을 때의 동작을 여기에 추가하세요.
            print("No target found")
        end
    end
end)


-- 필요한 서비스 및 변수 불러오기
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

-- 이전 타겟 초기화
local previousTarget = nil

-- 정보를 업데이트하는 함수
local function updateLabel(label, value)
    label.Text = label.Name .. ": " .. tostring(value)
end

-- updateInfo 함수 수정 후
local function updateInfo(target)
    -- 타겟이 있으면 정보 업데이트
    if target then
        -- 이전 타겟과 현재 타겟이 같은지 확인하여 변경되지 않도록 함
        if target ~= previousTarget then
            nameLabel.Text = "Name: " .. target.Name
            teamLabel.Text = "Team: " .. target.Team.Name
            
            -- 채력 정보 업데이트
            if target.Character and target.Character:FindFirstChild("Humanoid") then
                local health = target.Character.Humanoid.Health
                healthLabel.Text = "Health: " .. string.format("%.0f", health)
            else
                healthLabel.Text = "Health: N/A"
            end
            
            -- Hostile
            local hostileValue = target.Character and target.Character:FindFirstChild("Hostile") and target.Character.Hostile.Value or "Not available"
            updateLabel(HostileLabel, hostileValue)
            
            -- IsCuffed
            local isCuffedValue = target.Character and target.Character:FindFirstChild("IsCuffed") and target.Character.IsCuffed.Value or "Not available"
            updateLabel(IsCuffedLabel, isCuffedValue)
            
            -- IsHogged
            local isHoggedValue = target.Character and target.Character:FindFirstChild("IsHogged") and target.Character.IsHogged.Value or "Not available"
            updateLabel(IsHoggedLabel, isHoggedValue)
            
            -- IsLocked
            local isLockedValue = target.Character and target.Character:FindFirstChild("IsLocked") and target.Character.IsLocked.Value or "Not available"
            updateLabel(IsLockedLabel, isLockedValue)
            
            -- FrontCuffed
            local frontCuffedValue = target.Character and target.Character:FindFirstChild("FrontCuffed") and target.Character.FrontCuffed.Value or "Not available"
            updateLabel(FrontCuffedLabel, frontCuffedValue)
            
            -- Grabbing
            local grabbingValue = target.Character and target.Character:FindFirstChild("Grabbing") and target.Character.Grabbing.Value or "Not available"
            updateLabel(GrabbingLabel, grabbingValue)
            
            -- DownState
            local downStateValue = target.Character and target.Character:FindFirstChild("DownState") and target.Character.DownState.Value or "Not available"
            updateLabel(DownStateLabel, downStateValue)
            
            -- GrabbingWhom
            local grabbingWhomValue = target.Character and target.Character:FindFirstChild("GrabbingWhom") and target.Character.GrabbingWhom.Value or "Not available"
            updateLabel(GrabbingWhomLabel, grabbingWhomValue)
            
            -- GrabbedByWhom
            local grabbedByWhomValue = target.Character and target.Character:FindFirstChild("GrabbedByWhom") and target.Character.GrabbedByWhom.Value or "Not available"
            updateLabel(GrabbedByWhomLabel, grabbedByWhomValue)
            
            previousTarget = target
        end
        
    else
        -- 타겟이 없으면 기본값으로 설정
        nameLabel.Text = "Name: N/A"
        teamLabel.Text = "Team: N/A"
        healthLabel.Text = "Health: N/A"
        
        -- 다른 정보 초기화
        local defaultValues = "Not available"
        updateLabel(HostileLabel, defaultValues)
        updateLabel(IsCuffedLabel, defaultValues)
        updateLabel(IsHoggedLabel, defaultValues)
        updateLabel(IsLockedLabel, defaultValues)
        updateLabel(FrontCuffedLabel, defaultValues)
        updateLabel(GrabbingLabel, defaultValues)
        updateLabel(DownStateLabel, defaultValues)
        updateLabel(GrabbingWhomLabel, defaultValues)
        updateLabel(GrabbedByWhomLabel, defaultValues)
        
        previousTarget = nil
    end
end

-- GUI 생성
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 200, 0, 250)
Frame.Position = UDim2.new(0, 10, 0.5, -125)
Frame.BackgroundTransparency = 0.5
Frame.BackgroundColor3 = Color3.new(0, 0, 0)
Frame.Parent = ScreenGui

-- 이름 레이블
nameLabel = Instance.new("TextLabel")
nameLabel.Name = "NameLabel"
nameLabel.Size = UDim2.new(1, 0, 0, 20)
nameLabel.Position = UDim2.new(0, 0, 0, 0)
nameLabel.Text = "Name: N/A"
nameLabel.TextColor3 = Color3.new(1, 1, 1)
nameLabel.Parent = Frame

-- 팀 레이블
teamLabel = Instance.new("TextLabel")
teamLabel.Name = "TeamLabel"
teamLabel.Size = UDim2.new(1, 0, 0, 20)
teamLabel.Position = UDim2.new(0, 0, 0, 20)
teamLabel.Text = "Team: N/A"
teamLabel.TextColor3 = Color3.new(1, 1, 1)
teamLabel.Parent = Frame

-- 채력 레이블
healthLabel = Instance.new("TextLabel")
healthLabel.Name = "HealthLabel"
healthLabel.Size = UDim2.new(1, 0, 0, 20)
healthLabel.Position = UDim2.new(0, 0, 0, 40)
healthLabel.Text = "Health: N/A"
healthLabel.TextColor3 = Color3.new(1, 1, 1)
healthLabel.Parent = Frame

-- 추가 정보 레이블들
local labels = {
    {"HostileLabel", "Hostile"},
    {"IsCuffedLabel", "Cuffed"},
    {"IsHoggedLabel", "Hogged"},
    {"IsLockedLabel", "Locked"},
    {"FrontCuffedLabel", "FrontCuffed"},
    {"GrabbingLabel", "Grabbing"},
    {"DownStateLabel", "DownState"},
    {"GrabbingWhomLabel", "GrabbingWhom"},
    {"GrabbedByWhomLabel", "GrabbedByWhom"}
}

for _, data in ipairs(labels) do
    local label = Instance.new("TextLabel")
    label.Name = data[1]
    label.Size = UDim2.new(1, 0, 0, 20)
    label.Position = UDim2.new(0, 0, 0, 40)
    label.Text = label.Name .. ": N/A"
    label.TextColor3 = Color3.new(1, 1, 1)
    label.Parent = Frame
end


-- GUI 생성 및 정보 업데이트
updateInfo(nil) -- 초기화

-- 정보 업데이트를 매 프레임마다 실행
--RunService.RenderStepped:Connect(function()
while task.wait() do
    task.wait(0.1)
    pcall(function()
        local target = game:GetService("Players"):WaitForChild(_G.targetr)
        if target then
            updateInfo(target)
        else
            updateInfo(nil)
        end
    end) -- 정보 업데이트 함수 호출
end
--end)
