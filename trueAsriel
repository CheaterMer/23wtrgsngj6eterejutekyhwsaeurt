_G.targetr = nil
_G.OneTeamhit = false
_G.OneTeam = nil
_G.LockOnhit = false

local m1 = true

local player = game.Players.LocalPlayer
local char = player.Character
local root = char.HumanoidRootPart
local rootpart = char.HumanoidRootPart

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LP = Players.LocalPlayer


local player = game.Players.LocalPlayer
local humanoid = player.Character.Humanoid
local rootPart = humanoid.RootPart

local range = 15 -- 히트박스의 반지름

function createHitbox()
    local hitbox = Instance.new("Part")
    hitbox.Size = Vector3.new(range*2, range*2, range*2)
    hitbox.Shape = Enum.PartType.Ball
    hitbox.Transparency = 0.5
    hitbox.Color = Color3.new(1, 0, 0) -- 원하는 색상으로 변경 가능
    hitbox.Anchored = true
    hitbox.CanCollide = false
    hitbox.Position = rootPart.Position
    hitbox.Parent = game.Workspace -- 히트박스를 원하는 부모로 설정

    return hitbox
end

function removeHitbox()
    if hitbox then
        hitbox:Destroy()
    end
end

hitbox = createHitbox()

humanoid:GetPropertyChangedSignal("Health"):Connect(function()
    if humanoid.Health <= 0 then
        hitbox:Destroy()
    end
end)

task.spawn(function()
    while humanoid.Health > 0 do
        hitbox.Position = rootPart.Position
        wait(0.1) -- 히트박스 위치 업데이트 속도를 조절할 수 있습니다.
    end
end)


local Remotes = {}

for idx, val in pairs(game:GetService("ReplicatedStorage"):GetChildren()) do
    if val:IsA("RemoteEvent") then
        Remotes[val.Name] = val
    end
end

local itemlist = {}

for i,v in pairs(workspace:GetDescendants()) do
    if v:IsA("Tool") then
        --pcall(function ()
        if not table.find(itemlist, v.Name) then
        table.insert(itemlist, v.Name)
        end
        --end)
    end
end

local attack_tools = {
    "Axe",
    "Pickaxe",
    "Crowbar",
    "Hammer",
    "Knife",
    "Fist"
}

local function CheckRange(part1, part2, stud)
    range = (part1.Position - part2.Position).Magnitude
    if range < stud then
        return true
    end
    return false
end



function anime(id)
				local animation1 = Instance.new("Animation")
				--animation1.Name = "AttackMove"
				animation1.AnimationId = "rbxassetid://"..id
				local anim1 = game.Players.LocalPlayer.Character.Humanoid:LoadAnimation(animation1)
				anim1.Name = "AttackMove"
				task.wait()
				anim1:Play()
end
--[[
	task.spawn(function()
	while task.wait() do
	task.wait(0.1)
		--if char:FindFirstChild("Animate") then
			for i,v in ipairs(char.Humanoid:GetPlayingAnimationTracks()) do
				--print(v)
				if LP.Character.IsCuffed.Value == false then
				v:Stop()
				end 
			end 
		--end
	end
	end)
]]
function grabRemote()
	pcall(function()
		for idx, plr in pairs(Players:GetPlayers()) do
			if plr ~= LP 
            and CheckRange(LP.Character.HumanoidRootPart, plr.Character.HumanoidRootPart, 20)
			and plr.Character.Hostile.Value 
			and plr.Character.IsHogged.Value == true
            --and LP.Team ~= plr.Team 
            and plr.Character.Humanoid.Health ~= 0 
			then
                print(plr)
				Remotes["Grab"]:FireServer(plr.Character, "Grab")
			end
		end
	end) 
end

local CFFFFFF = false

function CuffRemote()
    if CFFFFFF == false then
        local alreadyProcessedPlayers = {}

        for idx, plr in pairs(Players:GetPlayers()) do
            if plr ~= LP 
                and not alreadyProcessedPlayers[plr]
                and CheckRange(LP.Character.HumanoidRootPart, plr.Character.HumanoidRootPart, 15)
                and plr.Character.Hostile.Value 
                and LP.Team ~= plr.Team 
                and plr.Character.Humanoid.Health ~= 0 
                and (plr.Character.IsCuffed.Value == true or plr.Character.FrontCuffed.Value == true)
            then
                Remotes["UnCuffed"]:FireServer(plr.Character)
                alreadyProcessedPlayers[plr] = true
            end
        end

        -- 실행 후 플레이어를 리셋합니다.
        wait(1) -- 5초 후에 리셋하도록 설정되어 있습니다. 필요에 따라 조정 가능합니다.
        for k, _ in pairs(alreadyProcessedPlayers) do
            alreadyProcessedPlayers[k] = nil
        end

    elseif CFFFFFF == true then
        local alreadyProcessedPlayers = {}

        for idx, plr in pairs(Players:GetPlayers()) do
            if plr ~= LP 
                and not alreadyProcessedPlayers[plr]
                and CheckRange(LP.Character.HumanoidRootPart, plr.Character.HumanoidRootPart, 10)
                and plr.Character.Hostile.Value 
                and LP.Team ~= plr.Team 
                and plr.Character.Humanoid.Health ~= 0 
                and plr.Character.IsCuffed.Value == false
            then
                if player.Character:FindFirstChild("Handcuffs") then
                    Remotes["UnCuffed"]:FireServer(plr.Character)
                    task.wait(0.1)
                    Remotes["IsCuffed"]:FireServer(LP.Character:WaitForChild("Handcuffs"), plr.Character)
                elseif player.Character:FindFirstChild("Handcuffs (fugitive)") then
                    Remotes["UnCuffed"]:FireServer(plr.Character)
                    task.wait(0.1)
                    Remotes["IsCuffed"]:FireServer(LP.Character:WaitForChild("Handcuffs (fugitive)"), plr.Character)
                end
                alreadyProcessedPlayers[plr] = true
            end
        end

        -- 실행 후 플레이어를 리셋합니다.
        wait(1) -- 5초 후에 리셋하도록 설정되어 있습니다. 필요에 따라 조정 가능합니다.
        for k, _ in pairs(alreadyProcessedPlayers) do
            alreadyProcessedPlayers[k] = nil
        end
    end
end

function HogRemote()
    pcall(function()
        local alreadyProcessedPlayers = {}

        for idx, pAlr in pairs(Players:GetPlayers()) do
            if pAlr ~= LP 
                and not alreadyProcessedPlayers[pAlr]
                and CheckRange(LP.Character.HumanoidRootPart, pAlr.Character.HumanoidRootPart, 10)
                and pAlr.Character.Hostile.Value 
                and LP.Team ~= pAlr.Team 
                and pAlr.Character.Humanoid.Health ~= 0 
            then
                --print(pAlr.Name,"Hog")
                if CFFFFFF == false then
                    if pAlr.Character.IsHogged.Value == true then
                        Remotes["IsHog"]:FireServer(pAlr.Character,"UnHog")
                    end
                    --CFFFFFF = true
                elseif CFFFFFF == true then
                    if pAlr.Character.IsHogged.Value == false then
                        Remotes["IsHog"]:FireServer(pAlr.Character,"Hog")
                    end
                end
                alreadyProcessedPlayers[pAlr] = true
            end
        end

        -- 실행 후 플레이어를 리셋합니다.
        wait(1) -- 5초 후에 리셋하도록 설정되어 있습니다. 필요에 따라 조정 가능합니다.
        for k, _ in pairs(alreadyProcessedPlayers) do
            alreadyProcessedPlayers[k] = nil
        end
    end) 
end

function hogcall()
	yooooo = game:GetService("Players"):FindFirstChild(_G.targetr)
	if CFFFFFF == true then
	if yooooo.Character.IsHogged.Value == true then
		Remotes["IsHog"]:FireServer(yooooo.Character,"UnHog")
	end
	
elseif CFFFFFF == false then
	
	if yooooo.Character.IsHogged.Value == false then
		Remotes["IsHog"]:FireServer(yooooo.Character,"Hog")
	end
end
end

function cuffcalls()
	yooooo = game:GetService("Players"):FindFirstChild(_G.targetr)
	if CFFFFFF == true then
		if yooooo.Character.IsCuffed.Value == true then
			Remotes["UnCuffed"]:FireServer(yooooo.Character)
		end
	elseif CFFFFFF == false then
		if yooooo.Character.IsCuffed.Value == false then
			Remotes["UnCuffed"]:FireServer(yooooo.Character)
			task.wait(0.1)
			Remotes["IsCuffed"]:FireServer(LP.Character:WaitForChild("Handcuffs (fugitive)"), yooooo.Character)
		end
	end
end

function cuffcalls()
	yooooo = game:GetService("Players"):FindFirstChild(_G.targetr)
	if CFFFFFF == true then
		if yooooo.Character.IsCuffed.Value == true then
			Remotes["UnCuffed"]:FireServer(yooooo.Character)
		end
	elseif CFFFFFF == false then
		if yooooo.Character.IsCuffed.Value == false then
			Remotes["UnCuffed"]:FireServer(yooooo.Character)
			task.wait(0.1)
			Remotes["IsCuffed"]:FireServer(LP.Character:WaitForChild("Handcuffs"), yooooo.Character)
		end
	end
end


function attack()
	pcall(function()
		local tool
		for i,v in pairs(attack_tools) do
			local t = LP.Character:FindFirstChild(v)
			if t then
				tool = t
				break
			end
		end
		for idx, plr in pairs(Players:GetPlayers()) do
			if
				plr ~= LP and CheckRange(LP.Character.HumanoidRootPart, plr.Character.HumanoidRootPart, 15)
				 and plr.Character.Hostile.Value and LP.Team ~= plr.Team and plr.Character.Humanoid.Health ~= 0 
			then
				if _G.OneTeamhit == true then
					if plr.Team.Name == _G.OneTeam then
						Remotes["Combat"]:FireServer(LP.Character, plr.Character.Head, tool)
						task.wait()
					end
				elseif _G.OneTeamhit == false and _G.LockOnhit == false then
					if LP.Team.Name == "Civilian" and plr.Team.Name ~= "Guard" then
						Remotes["Combat"]:FireServer(LP.Character, plr.Character.Head, tool)
						task.wait()
					elseif LP.Team.Name ~= "Civilian" then
						Remotes["Combat"]:FireServer(LP.Character, plr.Character.Head, tool)
						task.wait()
					end
				elseif _G.LockOnhit == true then
					if plr.Name == _G.targetr then
						Remotes["Combat"]:FireServer(LP.Character, plr.Character.Head, tool)
						task.wait()
					end
				end
			end
		end
	end) 
end



game:GetService("UserInputService").InputBegan:Connect(function(inp)
    if inp.KeyCode == Enum.KeyCode.Q then
		hitbox = createHitbox()
		if player.Character:FindFirstChild("Axe") then
			anime(7286445304)
			attack()
		elseif player.Character:FindFirstChild("Crowbar") then
			if m2 == true then
			anime(7137390931)
			attack()
			m2 = false
			else
				anime(7137385893)
				attack()
				m2 = true
			end
		elseif player.Character:FindFirstChild("Pickaxe") then
			anime(7098129399)
			attack()
		elseif player.Character:FindFirstChild("Knife") then
			if m1 == true then
				anime(7575196416)
				attack()
				m1 = false
			else
				anime(7562485782)
				attack()
				m1 = true
			end
		elseif player.Character:FindFirstChild("Fist") then
			if m3 == true then
				anime(6884302925)
				attack()
				m3 = false
			else
				anime(6884306689)
				attack()
				m3 = true
			end
		elseif player.Character:FindFirstChild("Hammer") then
			anime(6884398841)
			attack()
		elseif player.Character:FindFirstChild("Food") then
			Remotes["EatingEvent"]:FireServer(
				LP.Character,
				game:GetService("Players").LocalPlayer.Character.Food,
				"Heal")
		elseif player.Character:FindFirstChild("Hamburger") then
			Remotes["EatingEvent"]:FireServer(
				LP.Character,
				game:GetService("Players").LocalPlayer.Character.Hamburger,
				"Heal")
		elseif player.Character:FindFirstChild("Taser") then
			pos = game:GetService("Players").LocalPlayer.Character.Torso.CFrame.Position
			tpos = game:GetService("Players"):WaitForChild(_G.targetr).Character.Torso.CFrame.Position
			if player.Character.Taser.Charged.Value == true then
				spawn(function()	
				local args = {
						[1] = "Generate",
						[2] = game:GetService("Players").LocalPlayer.Character.Taser,
						[3] = Vector3.new(pos.X,pos.Y,pos.Z),
						[4] = Vector3.new(tpos.X,tpos.Y,tpos.Z)
					}
					
					game:GetService("ReplicatedStorage"):WaitForChild("Tase"):FireServer(unpack(args))
				end)
				local args = {
					[1] = "Hit",
					[2] = game:GetService("Players").LocalPlayer.Character.Taser,
					[3] = game:GetService("Players"):WaitForChild(_G.targetr).Character.Head
				}
				game:GetService("ReplicatedStorage"):WaitForChild("Tase"):FireServer(unpack(args))
			elseif player.Character.Taser.Charged.Value == false then
				--wait(0.5)
				anime(8109052918)
				local args = {
					[1] = "Recharge",
					[2] = game:GetService("Players").LocalPlayer.Character.Taser
				}
				
				game:GetService("ReplicatedStorage"):WaitForChild("Tase"):FireServer(unpack(args))
		
				end
			end
		--elseif player.Character:FindFirstChild("Handcuffs") then
		--	cuffcall()
		--elseif player.Character:FindFirstChild("Handcuffs (fugitive)") then
		--	cuffcalls()
		--elseif player.Character:FindFirstChild("Rope") then
		--	hogcall()
		removeHitbox()
	end
end)

game:GetService("UserInputService").InputBegan:Connect(function(inp)
    if inp.KeyCode == Enum.KeyCode.F then
		if LP.Character.GrabbingWhom.Value == "" then
			grabRemote()
		else
			GW = LP.Character.GrabbingWhom.Value
			WTP = Players:FindFirstChild(GW)
			Remotes["Grab"]:FireServer(WTP.Character, "Drop")
		end
	end
end)

local StarterGui = game:GetService("StarterGui")
--[[
game:GetService("UserInputService").InputBegan:Connect(function(inp)
    if inp.KeyCode == Enum.KeyCode.G then
		if CFFFFFF == true then
			CFFFFFF = false
			StarterGui:SetCore("SendNotification", {
				Title = "Cuff and Hog";
				Text = "Remove"
			})
		elseif CFFFFFF == false then
			CFFFFFF = true
			StarterGui:SetCore("SendNotification", {
				Title = "Cuff and Hog";
				Text = "Add"
			})
		end
	end
end)
]]
game:GetService("UserInputService").InputBegan:Connect(function(inp)
    if inp.KeyCode == Enum.KeyCode.V then
		char = game.Players.LocalPlayer.Character
		spawn(function()
			if char.HumanoidRootPart:FindFirstChild("Client") then
				char.HumanoidRootPart:FindFirstChild("Client"):Destroy()
			end
		end)
		spawn(function()
		anime(7568092298)
		end)
          --char.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
          tar = char.HumanoidRootPart.CFrame*CFrame.new(0,15,0) + game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector * 60
          --char.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
          v2 = Instance.new('BodyPosition',char.HumanoidRootPart) 
          fol = Instance.new('Folder',v2)
          v2.Name = 'Client' 
          v2.MaxForce = Vector3.new(1,1,1)*100000 
          v2.D = 2500 
          v2.P = 60000 
          v2.Position = (tar).p
		  wait(0.2)
		  v2:Destroy()
	end
end)

game:GetService("UserInputService").InputBegan:Connect(function(inp)
    if inp.KeyCode == Enum.KeyCode.X then
		if LP.Character.HumanoidRootPart.Anchored == false then
		local args = {
			[1] = LP.Character,
			[2] = "Play"
		}
		
		game:GetService("ReplicatedStorage"):WaitForChild("AnimationAnchor"):FireServer(unpack(args))
	else
		local args = {
			[1] = LP.Character,
			[2] = "Stop"
		}
		
		game:GetService("ReplicatedStorage"):WaitForChild("AnimationAnchor"):FireServer(unpack(args))
	end
	end
end)

--[[
local UserInputService = game:GetService("UserInputService")

local speed = 30 -- 이동 속도
local upwardOffset = 0 -- 위로 이동할 값

UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.R then
        local character = game.Players.LocalPlayer.Character
        if character then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                local rootPart = character:FindFirstChild("HumanoidRootPart")
                if rootPart then
                    -- R 키를 누를 때마다 캐릭터를 앞으로 이동하고 위로 올립니다.
                    local moveDirection = rootPart.CFrame.lookVector * speed
                    rootPart.CFrame = rootPart.CFrame + moveDirection + Vector3.new(0, upwardOffset, 0)
                end
            end
        end
    end
end)
]]

--[[
local UserInputService = game:GetService("UserInputService")

local teleportInterval = 1.5 -- 텔레포트 간격(초)
local teleportDistance = 5 -- 텔레포트 거리

local isTeleporting = false
local lastTeleportTime = 0

local function teleport()
    local character = game.Players.LocalPlayer.Character
    if character then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            local rootPart = character:FindFirstChild("HumanoidRootPart")
            if rootPart then
                local newPosition = rootPart.Position + rootPart.CFrame.lookVector * teleportDistance
                rootPart.CFrame = CFrame.new(newPosition)
            end
        end
    end
end

UserInputService.InputBegan:Connect(function(input)
    local key = input.KeyCode
    if key == Enum.KeyCode.W or key == Enum.KeyCode.A or key == Enum.KeyCode.S or key == Enum.KeyCode.D then
        isTeleporting = true
        teleport()
        lastTeleportTime = tick()
    end
end)

UserInputService.InputEnded:Connect(function(input)
    local key = input.KeyCode
    if key == Enum.KeyCode.W or key == Enum.KeyCode.A or key == Enum.KeyCode.S or key == Enum.KeyCode.D then
        isTeleporting = false
    end
end)

game:GetService("RunService").RenderStepped:Connect(function()
    if isTeleporting then
        local currentTime = tick()
        if currentTime - lastTeleportTime >= teleportInterval then
            teleport()
            lastTeleportTime = currentTime
        end
    end
end)
]]